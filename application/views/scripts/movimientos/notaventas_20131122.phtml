<form id="frmReporte-notaventas" name="frmReporte-notaventas" method="post" action="" target="_blank">
  <input type="hidden" name="txtpar1" id="txtpar1" />
  <input type="hidden" name="txtpar2" id="txtpar2" />
  <input type="hidden" name="txtpar3" id="txtpar3" />
</form>
<script type="text/javascript"> 
    var tab = Ext.getCmp(inicio.id+'-tabContent');
    //if(!Ext.getCmp('tiponovedades-tab')){
    Ext.ns('notaventas');
    notaventas={
        id:'notaventas',
        store_reader:new Ext.data.ArrayStore({  //step 1
            id:notaventas.id+'-reader_guiasasignadas',
            fields:[{name:'itemid'},{name:'id'},{name:'cantidad'},{name:'codigo'},{name:'detalle'},{name:'marca'},{name:'precio'},{name:'descuento'},{name:'total'},{name:'ume_id'},{name:'valor_desc'},{name:'valor_bruto'}]  
            }),
        init:function(){
            Ext.Ajax.timeout = 180000;
            Ext.QuickTips.init();
            
            var btn_nuevo=new Ext.Button({
                id:notaventas.id+'-btn_nuevo',
                text:'Nuevo',
                iconCls:'btn_add_log',
                listeners:
                    {
                        click:function()
                        {
                            Ext.getCmp(notaventas.id+'-panel_derecho').expand();
				Ext.getCmp(notaventas.id+'-panel_derecho').setVisible(true);
                            notaventas.fn_nuevo();
                        }
                    }
            });
            
            var btn_guardar=new Ext.Button({
                id:notaventas.id+'-btn_guardar',
                text:'Guardar',
                iconCls:'btn_save_log',
                listeners:
                    {
                        click:function()
                        {
                            notaventas.fn_guardar();
                        }
                    }
            });
            
            var btn_actualizar=new Ext.Button({
                id:notaventas.id+'-btn_actualizar',
                text:'Actualizar',
                iconCls:'btn_update_log',
                listeners:
                    {
                        click:function()
                        {
                            notaventas.fn_actualizar();
                        }
                    }
            });
            
            var btn_editar=new Ext.Button({
                id:notaventas.id+'-btn_editar',
                text:'Editar',
                iconCls:'btn_edit_log',
                listeners:
                    {
                        click:function()
                        {
                            notaventas.fn_editar();
                        }
                    }
            });
            
            var btn_cancelar=new Ext.Button({
                id:notaventas.id+'-btn_cancelar',
                text:'Cancelar',
                iconCls:'btn_cancel_log',
                listeners:
                    {
                        click:function()
                        {
                            Ext.getCmp(notaventas.id+'-panel_derecho').collapse();
							Ext.getCmp(notaventas.id+'-panel_derecho').setVisible(false);
                            notaventas.fn_habilitar(false,0);
                        }
                    }
            });
            
            var btn_anular=new Ext.Button({
                id:notaventas.id+'-btn_anular',
                text:'Anular',
                icon:'images/icon/btn_cancelar.png',
                listeners:
                    {
                        click:function()
                        {
							notaventas.fn_anular();
                        }
                    }
            });
			
			var btn_eliminar=new Ext.Button({
                id:notaventas.id+'-btn_eliminar',
                text:'Eliminar',
                iconCls:'btn_delete_log',
                listeners:
                    {
                        click:function()
                        {
							notaventas.fn_eliminar();
                        }
                    }
            });
			
			var btn_imprimir=new Ext.Button({
                id:notaventas.id+'-btn_imprimir',
                text:'Imprimir',
                icon:'images/icon/printer.png',
                listeners:
                    {
                        click:function()
                        {
                            Ext.Msg.confirm('Alerta', 'Desea imprimir listado?', function(btn) {
                                if(btn == 'yes')
                                {
                                    notaventas.fn_imprimir();
                                }
                            });
                        }
                    }
            });
			
			var btn_buscli=new Ext.Button({
                id:notaventas.id+'-btn_buscli',
                text:'Buscar',
                listeners:
                    {
                        click:function()
                        {
							//alert(vgVentana);
							vgVentana = 'notaventas';
                           inicio.getForm( 'maestros/buscaclientes','Busca Clientes')
                        }
                    }
            });

            var store_notaventas_lista=new Ext.data.JsonStore({
                url:'movimientos/notaventas-lista',
                root:'data',
                totalProperty:'total',
                fields:['nombre_cliente','descripcion_documento','nve_id','codigo','cli_id','tipo_ingreso','doc_id','doc_n','tnt_id','n_guia','cpa_id','mon_id','valor_venta','impuesto_igv','total_venta', 'fec_ven', 'fec_mov', 'moneda', 'cli_codigo', 'ruc', 'anulado', 'afecta', 'formato', 'observacion', 'cliente', 'cli_ruc','doc_abrev', 'mon_abrev', 'tipo_cambio'],
				remoteSort:true,				
				sortInfo: {field:'fec_mov', direction:'desc'}
            });
			
			var pager = new Ext.PagingToolbar({
                id:notaventas.id+'_pager',
                store:store_notaventas_lista,
                displayInfo: true,
                displayMsg: '{0} - {1} de {2} Registros',
                emptyMsg: 'No existen registros',
                pageSize:100
            });
			
			pager.on('beforechange',function(bar,params){  
				params.campo = Ext.getCmp(notaventas.id+'-combo_describe').getValue();
				params.query = Ext.getCmp(notaventas.id+'-buscar').getValue();
			});
            
            var vstore_clientes_lista=new Ext.data.JsonStore({
                url:'maestros/clientes-lista',
                root:'data',
                totalProperty:'total',
                fields:['cli_id','nombre','ruc','codigo']
            });
            
            //vstore_clientes_lista.load({params:{start:0,limit:100}});
			
			var pagerCmbCli = new Ext.PagingToolbar({
                id:notaventas.id+'_pagerCmbCli',
                store:vstore_clientes_lista,
                displayInfo: true,
                displayMsg: '{0} - {1} de {2} Registros',
                emptyMsg: 'No existen registros',
                pageSize:100
            });
			
			pagerCmbCli.on('beforechange',function(bar,params){  
				params.campo = 'nombre';
				params.query = Ext.getCmp(notaventas.id+'-cli_id').getValue();
			});
            
            var store_monedas_lista=new Ext.data.JsonStore({
                url:'tablas/monedas-lista',
                root:'data',
                totalProperty:'total',
                fields:['mon_id','nombre']
            });
            
            store_monedas_lista.load();
			
			var store_tipo_nota_lista=new Ext.data.JsonStore({
                url:'tablas/tipo-nota-lista',
                root:'data',
                totalProperty:'total',
                fields:['tnt_id','nombre']
            });
            
            store_tipo_nota_lista.load({params:{campo:'indicador',query:'V'}});

            var store_documentos_lista=new Ext.data.JsonStore({
                url:'tablas/documentos-lista',
                root:'data',
                totalProperty:'total',
                fields:['doc_id','abrev','descripcion','notaventas','compras','n_notaventas','n_compras','nn_credito','nn_debito','str_serie_n_compras','str_n_compras','str_serie_n_notaventas','str_n_notaventas','str_serie_nn_credito','str_nn_credito','str_serie_nn_debito','str_nn_debito']
            });
            
            store_documentos_lista.load({params:{campo:'nventas',query:'SI'}});
            
            var store_condiciones_pago_lista=new Ext.data.JsonStore({
                url:'tablas/condiciones-pago-lista',
                root:'data',
                totalProperty:'total',
                fields:['cpa_id','codigo','descripcion','dias','letras']
            });
            
            store_condiciones_pago_lista.load();

            var store_compras_describe=new Ext.data.JsonStore({
                url:'movimientos/notaventas-describe',
                root:'data',
                totalProperty:'total',
                fields:['Field']
            });
            
            store_compras_describe.load({params:{table:'movimientos_compras'}});
            
            var combo_compras_describe=new Ext.form.ComboBox({
                id:notaventas.id+'-combo_describe',
                store:store_compras_describe,
                valueField:'Field',
                displayField:'Field',
                triggerAction:'all',
                emptyText:'Campo',
                mode:'local',
                width:100,
                editable:false
            });
            
            var grid_notaventas_lista = new Ext.grid.GridPanel({
                id:notaventas.id+'-grid_lista',
                store: store_notaventas_lista,
                singleSelect:true,
                columnLines:true,
                monitorResize:true,
                width:226,
                height:300,
                loadMask:true,
                sm: new Ext.grid.RowSelectionModel({
                    singleSelect:true
                }),
				bbar:pager,
                columns:
                [
                    {header:'Id',sortable :true,dataIndex:'nve_id',width:25},
					{header:'Fecha',sortable :true,dataIndex:'fec_ven',width:70},
                    {header:'Doc',sortable :true,dataIndex:'doc_abrev',width:40},
					{header:'Número',sortable :true,dataIndex:'doc_n',width:80, align:'center'},
					{header:'Cliente',sortable :true,dataIndex:'nombre_cliente',width:300},
					{header:'Valor NCV',sortable :true,dataIndex:'valor_venta',width:80, align:'right'},
					{header:'IGV',sortable :true,dataIndex:'impuesto_igv',width:80, align:'right'},
                    {header:'Total NCV',sortable :true,dataIndex:'total_venta',width:80, align:'right'},
					{header:'Mon',sortable :true,dataIndex:'mon_abrev',width:40, align:'left'},
					{header:'Anulado',sortable :true,dataIndex:'anulado',width:50, align:'left'},
					{header:'T.Cambio',sortable :true,dataIndex:'tipo_cambio',width:80, align:'right'}
                ]
                ,
                listeners:
                {
                    rowdblclick:function()
                    {
                        Ext.getCmp(notaventas.id+'-panel_derecho').expand();
				Ext.getCmp(notaventas.id+'-panel_derecho').setVisible(true);
                        notaventas.fn_editar();
                    },
					rowclick:function()
                    {
                        Ext.getCmp(notaventas.id+'-btn_editar').enable();
						Ext.getCmp(notaventas.id+'-btn_eliminar').enable();
						Ext.getCmp(notaventas.id+'-btn_anular').enable();
                    }
                }
            });

            
            var grid_guiasAsignadas=new Ext.grid.EditorGridPanel({
                             //tabIndex:27,
                             id:notaventas.id+'-guias_asignadas',
                             store: notaventas.store_reader,
                             clicksToEdit: 1,
                             singleSelect:true,
                             columnLines:true,
                             /*monitorResize:true,*/
                             enableKeyEvents: true,
                             viewConfig:{forceFit:true},
                             /*autoScroll:true,
                             autoHeight:true,*/
                             height:150,
                             listeners:
                                 {
                                    afteredit:function()
                                    {
                                        notaventas.calcular();
                                    }
                                 },
                             columns:
                             [
                                {
                                  header:"Item", width: 20, sortable: true, dataIndex: 'itemid'},
                                {
                                  header:"Cantidad", width: 30, sortable: true, dataIndex: 'cantidad',align:'right',
                                  editor: new Ext.form.TextField(
                                  {
									  	style:{textAlign:'right'},
                                        enableKeyEvents: true,
										selectOnFocus:true,
										listeners : {
											change : function(obj, eve){
												var index = grid_guiasAsignadas.getSelectionModel().getSelectedCell();
												if (!index)
												{
													return false;
												}												   
												datos=Ext.getCmp(notaventas.id+'-guias_asignadas').getStore(0).getAt(index[0]);
												
												vValor = Number(obj.getValue()) * Number(datos.get('precio'));
												
												vBruto = vValor;
												datos.set('valor_bruto',vBruto);
												
												vDesc = datos.get('descuento');
												var n=vDesc.split("+");
												if(n==0){
													vValor = vValor - (vValor*Number(vDesc))/100;
													vValor = Math.round(vValor*100)/100;	
												}else{
													for(i=0;i<n.length;i++){
														vValor = vValor - (vValor*Number(n[i]))/100;
														vValor = Math.round(vValor*100)/100;	
													}
												}
												datos.set('valor_desc',vBruto - vValor);
												datos.set('total',vValor);
												notaventas.calcular();
											},
											specialkey:function(obj,e)
											{
												if(e.getKey() == 13)
												{
													//Ext.getCmp(notaventas.id+'-guias_asignadas').startEditing(1,5);
													return false;
												}
											}
										}
                                   })
                                },
                                {
                                  header:"Código", width: 40, sortable: true, dataIndex: 'codigo'},
                                {
                                  header:"Detalle", width: 120, sortable: true, dataIndex: 'detalle'},
                                {
                                  header:"Marca", width: 40, sortable: true, dataIndex: 'marca'},
                                {
                                  header:"Precio", width: 50, sortable: true, dataIndex: 'precio',align:'right',
                                  editor: new Ext.form.NumberField(
                                  {
                                        style:{textAlign:'right'},
                                        enableKeyEvents: true,
										selectOnFocus:true,
										listeners : {
											change : function(obj, eve){
												var index = grid_guiasAsignadas.getSelectionModel().getSelectedCell();
												if (!index)
												{
													return false;
												}												   
												datos=Ext.getCmp(notaventas.id+'-guias_asignadas').getStore(0).getAt(index[0]);
												
												vValor = Number(datos.get('cantidad')) * Number(obj.getValue());
												vBruto = vValor;
												vBruto = Math.round(vBruto*100)/100;	
												datos.set('valor_bruto',vBruto);
												
												vDesc = datos.get('descuento');
												var n=vDesc.split("+");
												if(n==0){
													vValor = vValor - (vValor*Number(vDesc))/100;
													vValor = Math.round(vValor*100)/100;	
												}else{
													for(i=0;i<n.length;i++){
														vValor = vValor - (vValor*Number(n[i]))/100;
														vValor = Math.round(vValor*100)/100;	
													}
												}
												datos.set('valor_desc',vBruto - vValor);
												datos.set('total',vValor);
												notaventas.calcular();
											},
											specialkey:function(obj,e)
											{
												if(e.getKey() == 13)
												{
													//e.setKey(9);
													return false;
												}
											}
										}
                                   })
                                },
                                {
                                  header:"Desc. %", width: 40, sortable: true, dataIndex: 'descuento',align:'right',
                                  editor: new Ext.form.TextField(
                                  {
									  style:{textAlign:'right'},
                                        enableKeyEvents: true,
										selectOnFocus:true,
										listeners : {
											change : function(obj, eve){
												var index = grid_guiasAsignadas.getSelectionModel().getSelectedCell();
												if (!index)
												{
													return false;
												}												   
												datos=Ext.getCmp(notaventas.id+'-guias_asignadas').getStore(0).getAt(index[0]);
												
												vValor = Number(datos.get('cantidad')) * Number(datos.get('precio'));
												vBruto = vValor;
												datos.set('valor_bruto',vBruto);
												
												vDesc = obj.getValue();
												var n=vDesc.split("+");
												if(n==0){
													vValor = vValor - (vValor*Number(vDesc))/100;
													vValor = Math.round(vValor*100)/100;	
												}else{
													for(i=0;i<n.length;i++){
														vValor = vValor - (vValor*Number(n[i]))/100;
														vValor = Math.round(vValor*100)/100;	
													}
												}
												datos.set('valor_desc',vBruto - vValor);
												datos.set('total',vValor);
												notaventas.calcular();
											},
											specialkey:function(obj,e)
											{
												if(e.getKey() == 13)
												{
													//e.setKey(9);
													return false;
												}
											}
										}                          
                                   })
                                },
                                {
                                  header:"Total", width: 60, sortable: true, dataIndex: 'total',align:'right'}
								
                               ]
                             ,
                             tbar:
                               [
                                  {
                                     xtype:'button',
                                     text:'Añadir',
                                     iconCls:'btn_add_log',
									 hidden:true,
                                     listeners:
                                     {
                                       click:function()
                                       {
									   	notaventas.fn_buscar_producto();
                                          
                                        }
                                  }
                                }
                                  ,
                                  {
                                     xtype:'button',
                                     text:'Quitar',
                                     iconCls:'btn_delete_log',
                                     listeners:
                                     {
                                       click:function()
                                       {
                                          var index = grid_guiasAsignadas.getSelectionModel().getSelectedCell();
                                          if (!index)
                                          {
                                              return false;
                                          }
                                          var rec =  notaventas.store_reader.getAt(index[0]);
                                           notaventas.store_reader.remove(rec);
                                           
                                           notaventas.calcular();
                                           
                                           
                                       }
                                     }
                                  },
                                    
                                     ]
                                }); 

            var panel_form=new Ext.Panel({
            layout:'form',
            border:false,
            bodyStyle:'margin:5px;',
            items:
            [
            {
				id:notaventas.id+'-formulario',
				xtype:'form',
				frame: true,
                layout:'column',
                border:false,
                items:
                [
					{
                      xtype:'hidden',
                      id:notaventas.id+'-nve_id',
                      value:'0'
                    },
					{
                      xtype:'hidden',
                      id:notaventas.id+'-tipo_ingreso',
                      value:'1'
                    },
                    {
                        xtype:'panel',labelWidth:150,layout:'form',
                        border:false,columnWidth:.25,
                        items:
                        [        
                            {
                                xtype:'checkbox',
                                id:notaventas.id+'-clientes_varios',
                                fieldLabel:'Indicar Clientes Varios',
                                checked:false,
								enableKeyEvents: true,
								listeners:{
									check:function(obj, even){
										Ext.getCmp(notaventas.id+'-cliente').setValue('CLIENTES VARIOS');
										Ext.getCmp(notaventas.id+'-cli_ruc').setValue('');
										Ext.getCmp(notaventas.id+'-cli_id').setValue('');
										Ext.getCmp(notaventas.id+'-cli_codigo').setValue('');
										if(obj.getValue()){
											Ext.getCmp(notaventas.id+'-cli_id').setVisible(false);
											Ext.getCmp(notaventas.id+'-cliente').setVisible(true);
											Ext.getCmp(notaventas.id+'-cli_ruc').setReadOnly(false);
											Ext.apply(Ext.getCmp(notaventas.id+'-cli_id'),{allowBlank:true});
											Ext.apply(Ext.getCmp(notaventas.id+'-cliente'),{allowBlank:false});
											//Ext.apply(Ext.getCmp(notaventas.id+'-cli_ruc'),{allowBlank:false});
										}else{
											Ext.getCmp(notaventas.id+'-cliente').setVisible(false);
											Ext.getCmp(notaventas.id+'-cli_id').setVisible(true);
											Ext.getCmp(notaventas.id+'-cli_ruc').setReadOnly(true);
											Ext.apply(Ext.getCmp(notaventas.id+'-cli_id'),{allowBlank:false});
											Ext.apply(Ext.getCmp(notaventas.id+'-cliente'),{allowBlank:true});
											//Ext.apply(Ext.getCmp(notaventas.id+'-cli_ruc'),{allowBlank:true});
										}
									}
								}
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:120,layout:'form',
                        border:false,columnWidth:.45,
                        items:
                        [
                            {
                                xtype:'combo',
                                store:store_tipo_nota_lista,
                                id:notaventas.id+'-tnt_id',
                                fieldLabel:'Tipo Nota',
                                itemCls: 'label01',
                                style:'margin-left:7px',
                                width:150,
                                mode:'local',
                                valueField:'tnt_id',
                                displayField:'nombre',
                                triggerAction:'all',
                                forceSelection:true,
								allowBlank:false,
								value:'1',
                				editable:false,
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:60,layout:'form',
                        border:false,columnWidth:.3,
                        items:
                        [
                            {
                                xtype:'textfield',
                                id:notaventas.id+'-codigo',
                                fieldLabel:'Operación',
                                itemCls: 'label01',
                                style:'margin-left:7px',
                                width:150,
								disabled:true,
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:80,layout:'form',
                        border:false,columnWidth:.42,
                        items:
                        [
                            {
                                xtype:'combo',
                                store:vstore_clientes_lista,
                                id:notaventas.id+'-cli_id',
                                fieldLabel:'Cliente',
                                itemCls: 'label01',
                                style:'margin-left:7px',
                                width:220,
                                valueField:'cli_id',
                                displayField:'nombre',
                                triggerAction:'all',
								allowBlank:false,
								pageSize:100,
                                listeners:
                                    {
										beforequery:function(obj){
											vstore_clientes_lista.setBaseParam('campo', 'nombre');
											vstore_clientes_lista.setBaseParam('query', Ext.getCmp(notaventas.id+'-cli_id').getValue());						
										},
										specialkey:function(obj, e)
										{
											if (e.getKey() == 13)
											{
												/*if(obj.isExpanded( )){
												obj.collapse();
												}else{*/
												vstore_clientes_lista.load({params:{campo:'nombre',query:obj.getRawValue(),start:0,limit:100}});
												//}
											}
										},
                                        select:function(cmb,record,index)
                                        {
                                            Ext.getCmp(notaventas.id+'-cli_ruc').setValue(record.get('ruc'));
                                            Ext.getCmp(notaventas.id+'-cli_codigo').setValue(record.get('codigo'));
                                        }
                                    }
                            } 
                        ]
                    },
					{
                        xtype:'panel',labelWidth:50,layout:'form',
                        border:false,columnWidth:.07,
                        items:
                        [
                            btn_buscli
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:80,layout:'form',
                        border:false,columnWidth:.40,
                        items:
                        [
                            {
                                xtype:'textfield',
                                id:notaventas.id+'-cliente',
                                fieldLabel:'Cliente',
                                itemCls: 'label01',
                                style:'margin-left:7px',
                                width:220,
								hidden:true
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:50,layout:'form',
                        border:false,columnWidth:.25,
                        items:
                        [
                            {
                                xtype:'textfield',
                                fieldLabel:'RUC/DNI',
                                id:notaventas.id+'-cli_ruc',
                                itemCls: 'label01',
                                style:'margin-left:7px',
                                width:100,
                                readOnly:true,
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:70,layout:'form',
                        border:false,columnWidth:.25,
                        items:
                        [
                            {
                                xtype:'textfield',
                                fieldLabel:'Código',
                                id:notaventas.id+'-cli_codigo',
                                itemCls: 'label01',
                                style:'margin-left:7px',
                                width:110,
                                readOnly:true
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:80,layout:'form',
                        border:false,columnWidth:.42,
                        items:
                        [
                            {
                                xtype:'combo',
                                store:store_documentos_lista,
                                id:notaventas.id+'-doc_id',
                                fieldLabel:'Documento',
                                itemCls: 'label01',
                                style:'margin-left:7px',
                                width:220,
                                mode:'local',
                                valueField:'doc_id',
                                displayField:'descripcion',
                                triggerAction:'all',
                                forceSelection:true,
								allowBlank:false,
                				editable:false,
                                listeners:
                                {
                                    select:function(cmb,record,index)
                                    {				
										Ext.Msg.wait('Obteniendo Nro de Documento... por favor espere!');
										Ext.Ajax.request({
											url:'tablas/numeracion-obtener-codigo',
											params:
											{
												doc_id:record.get('doc_id'),
												tipo:'6'
											},
											success:function(response,options)
											{    
												Ext.Msg.hide();    
												var res = Ext.decode(response.responseText);
												if(res.success){
													var numero=(Math.pow(10,res.data[0]['lon'])).toString()+(Number(res.data[0]['nro'])+1);
													var codigo=numero.substr(numero.length-res.data[0]['lon'],res.data[0]['lon'])
													Ext.getCmp(notaventas.id+'-numero').setValue(res.data[0]['serie']+ '-' + codigo);
												}else{
													Ext.getCmp(notaventas.id+'-numero').setValue('');
												}
												
											}
										});
										
										if(record.get('doc_id')==1){
											Ext.getCmp(notaventas.id+'-afecta_almacen').setVisible(false);
											Ext.getCmp(notaventas.id+'-afecta_almacen').setValue(false);
										}else{
											Ext.getCmp(notaventas.id+'-afecta_almacen').setVisible(true);
											Ext.getCmp(notaventas.id+'-afecta_almacen').setValue(true);
										}											
                                    }
                                }
                            } 
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:50,layout:'form',
                        border:false,columnWidth:.28,
                        items:
                        [
                            {
                                xtype:'textfield',
                                id:notaventas.id+'-numero',
                                fieldLabel:'Número',
                                itemCls: 'label01',
                                style:'margin-left:7px',
                                width:120,
								allowBlank:false,
								listeners : {
									blur:function(obj){
										vDoc = obj.getValue();
										n=vDoc.indexOf("-");
										
										vSer = vDoc.substr(0,n);
										vSer=(Math.pow(10,3)).toString()+(Number(vSer));
										vSer=vSer.substr(vSer.length-3,3);
										
										vNro = vDoc.substr(n+1,vDoc.length - n);
										var vNro=(Math.pow(10,7)).toString()+(Number(vNro));
										var vNro=vNro.substr(vNro.length-7,7);
										Ext.getCmp(notaventas.id+'-numero').setValue(vSer+ '-' + vNro);
									}	
								}
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:70,layout:'form',
                        border:false,columnWidth:.3,
                        items:
                        [
                            {
                                xtype:'datefield',
                                id:notaventas.id+'-fecha',
                                emptyText:'Fecha',
                                width:100,
                                fieldLabel:'Fecha',
                                format:'d/m/Y',
                                altFormats : "d/m/Y",
                                value:'<? echo date('d/m/Y');?>',
                                style:'margin-left:7px'
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:80,layout:'form',
                        border:false,columnWidth:.3,
                        items:
                        [
                            {
                                xtype:'textfield',
                                id:notaventas.id+'-guia_remision',
                                fieldLabel:'Guía',
                                itemCls: 'label01',
                                style:'margin-left:7px',
                                width:120,
								listeners : {
									blur:function(obj){
										vDoc = obj.getValue();
										n=vDoc.indexOf("-");
										
										vSer = vDoc.substr(0,n);
										vSer=(Math.pow(10,3)).toString()+(Number(vSer));
										vSer=vSer.substr(vSer.length-3,3);
										
										vNro = vDoc.substr(n+1,vDoc.length - n);
										var vNro=(Math.pow(10,7)).toString()+(Number(vNro));
										var vNro=vNro.substr(vNro.length-7,7);
										Ext.getCmp(notaventas.id+'-guia_remision').setValue(vSer+ '-' + vNro);
									}	
								}
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:80,layout:'form',
                        border:false,columnWidth:.7,
                        items:
                        [
                            {
                                xtype:'textfield',
                                id:notaventas.id+'-direccion',
                                fieldLabel:'Dirección',
                                itemCls: 'label01',
                                style:'margin-left:7px',
readOnly:true,
disabled:true,
                                width:450,
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:80,layout:'form',
                        border:false,columnWidth:.42,
                        items:
                        [
                            {
                                xtype:'combo',
                                store:store_condiciones_pago_lista,
                                id:notaventas.id+'-cpa_id',
                                fieldLabel:'Forma de Pago',
                                itemCls: 'label01',
                                style:'margin-left:7px',
                                width:150,
                                mode:'local',
                                valueField:'cpa_id',
                                displayField:'descripcion',
                                triggerAction:'all',
                                forceSelection:true,
								allowBlank:false,
								value:'1',
                				editable:false,
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:50,layout:'form',
                        border:false,columnWidth:.30,
                        items:
                        [
                            {
                                xtype:'combo',
                                store:store_monedas_lista,
                                id:notaventas.id+'-mon_id',
                                fieldLabel:'Moneda',
                                itemCls: 'label01',
                                style:'margin-left:7px',
                                width:120,
                                mode:'local',
                                valueField:'mon_id',
                                displayField:'nombre',
                                triggerAction:'all',
                                forceSelection:true,
								allowBlank:false,
								value:'<?=$sesion->se_moneda_almacen?>',
                				editable:false,
								listeners:
                                {
                                    select:function(cmb,record,index)
                                    {
										if(cmb.getValue()=='1'){											
											document.getElementById(Ext.getCmp(notaventas.id+'-valor_bruto').label.id).innerHTML = 'Valor Bruto S/.';
											document.getElementById(Ext.getCmp(notaventas.id+'-valor_descuento').label.id).innerHTML = 'Descuento S/.';
											document.getElementById(Ext.getCmp(notaventas.id+'-valor_venta').label.id).innerHTML = 'Valor Compra S/.';
											document.getElementById(Ext.getCmp(notaventas.id+'-impuesto_igv').label.id).innerHTML = 'Imp. IGV S/.';
											document.getElementById(Ext.getCmp(notaventas.id+'-total_venta').label.id).innerHTML = 'Total Compra S/.';
											
										}else{
											document.getElementById(Ext.getCmp(notaventas.id+'-valor_bruto').label.id).innerHTML = 'Valor Bruto $';
											document.getElementById(Ext.getCmp(notaventas.id+'-valor_descuento').label.id).innerHTML = 'Descuento $';
											document.getElementById(Ext.getCmp(notaventas.id+'-valor_venta').label.id).innerHTML = 'Valor Compra $';
											document.getElementById(Ext.getCmp(notaventas.id+'-impuesto_igv').label.id).innerHTML = 'Imp. IGV $';
											document.getElementById(Ext.getCmp(notaventas.id+'-total_venta').label.id).innerHTML = 'Total Compra $';
										}										
                                    }
                                }
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:90,layout:'form',
                        border:false,columnWidth:.28,
                        items:
                        [        
                            {
                                xtype:'textfield',
                                id:notaventas.id+'-tipocambio',
                                fieldLabel:'Tipo de Cambio',
                                itemCls: 'label01',
                                style:{marginLeft:'0px',textAlign:'right'},
                                width:70,
                                readOnly:true,
								value:vgTcC,
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:70,layout:'form',
                        border:false,columnWidth:.3,
                        items:
                        [
                            /*{
                                xtype:'datefield',
                                id:notaventas.id+'-fecha_vencimiento',
                                emptyText:'Vencimiento',
                                width:100,
                                fieldLabel:'Vencimiento',
                                format:'d/m/Y',
                                altFormats : "d-m-Y",
                                readOnly:true,
                                style:'margin-left:7px'
                            }*/
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:105,layout:'form',
                        border:false,columnWidth:.20,
                        items:
                        [
                            {
                                xtype:'checkbox',
                                id:notaventas.id+'-afecta_almacen',
                                fieldLabel:'Afecta Almacén',
                                checked:true
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:85,layout:'form',
                        border:false,columnWidth:.20,
                        items:
                        [        
                            {
                                xtype:'checkbox',
                                id:notaventas.id+'-inc_igv',
                                fieldLabel:'Incluye IGV',
                                checked:true,
								enableKeyEvents: true,
								listeners:{
									check:function(obj, even){
										notaventas.calcular();
									}
								}
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:70,layout:'form',
                        border:false,columnWidth:.15,
                        items:
                        [        
                            {
                                xtype:'checkbox',
                                id:notaventas.id+'-jal_com',
                                fieldLabel:'Jalar Venta',
                                checked:false,
								enableKeyEvents: true,
								listeners:{
									check:function(obj, even){
										if(obj.getValue()){
											Ext.getCmp(notaventas.id+'-compra').enable();
											Ext.getCmp(notaventas.id+'-compra').focus(true,0)
										}else{
											Ext.getCmp(notaventas.id+'-compra').disable();
										}
									}
								}
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:20,layout:'form',
                        border:false,columnWidth:0.20,
                        items:
                        [
                            {
                                xtype: "radiogroup",
                                fieldLabel: "Tipo",
                                id: notaventas.id+'-tip_doc',
                                style:'margin-left:7px',
                                defaults: {xtype: "radio",name: "tip_doc"},
                                columns: [50, 50],
                                items: [
                                    {
                                        id:notaventas.id+'-tip_doc_f',
                                        boxLabel: "FAC.",name: "tip_doc",
                                        inputValue: "2",
                                        checked:true
                                    },
                                    {
                                        id:notaventas.id+'-tip_doc_b',
                                        boxLabel: "BOL.",name: "tip_doc",
                                        inputValue: "3"
                                    }
                                ]
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:60,layout:'form',
                        border:false,columnWidth:0.25,
                        items:
                        [
                            {
                                xtype:'textfield',
                                id:notaventas.id+'-compra',
                                fieldLabel:'Nro de Doc.',
                                itemCls: 'label01',
                                style:'margin-left:7px',
								disabled:true,
                                width:120,
								listeners : {
									specialkey:function(obj,e)
									{
										if(e.getKey() == 13)
										{
											vDoc = obj.getValue();
											n=vDoc.indexOf("-");
											
											vSer = vDoc.substr(0,n);
											vSer=(Math.pow(10,3)).toString()+(Number(vSer));
											vSer=vSer.substr(vSer.length-3,3);
											
											vNro = vDoc.substr(n+1,vDoc.length - n);
											var vNro=(Math.pow(10,6)).toString()+(Number(vNro));
											var vNro=vNro.substr(vNro.length-6,6);
											Ext.getCmp(notaventas.id+'-compra').setValue(vSer+ '-' + vNro);
											//alert(Ext.getCmp(notaventas.id+'-tip_doc').getValue().getGroupValue());
											Ext.Msg.wait('Cargando información de compra... por favor espere!');
											Ext.Ajax.request({
												url:'movimientos/ventas-jalar',
												params:
												{
													doc_n:(vSer+ '-' + vNro),
													tipo:Ext.getCmp(notaventas.id+'-tip_doc').getValue().getGroupValue(),
												},
												success:function(response,options)
												{       
													Ext.Msg.hide();      
													//alert(response.responseText);
													var res = Ext.decode(response.responseText);
													
													if(res.success){
													//alert(res.cabecera);
													//alert(res.data);
													
													//alert(res.cabecera['fec_mov']);
													dato1 = res.cabecera[0];
													//alert(dato1['fec_mov']);
													
													//Ext.getCmp(notaventas.id+'-tipo_ingreso').setValue(dato1['tipo_ingreso']);
													
													Ext.getCmp(notaventas.id+'-cli_id').store.load({params:{campo:'cli_id',query:dato1['cli_id'],start:0,limit:1}});
													Ext.getCmp(notaventas.id+'-cli_id').setValue(dato1['cli_id']);
													Ext.getCmp(notaventas.id+'-cli_id').setRawValue(dato1['nombre_cliente']);
													
													Ext.getCmp(notaventas.id+'-cli_ruc').setValue(dato1['ruc']);
													Ext.getCmp(notaventas.id+'-cli_codigo').setValue(dato1['codigo']);
													//Ext.getCmp(notaventas.id+'-doc_id').setValue(dato1['doc_id']);
													//Ext.getCmp(notaventas.id+'-numero').setValue(dato1['doc_n']);
													Ext.getCmp(notaventas.id+'-guia_remision').setValue(dato1['n_guia']);
													Ext.getCmp(notaventas.id+'-cpa_id').setValue(dato1['cpa_id']);
													Ext.getCmp(notaventas.id+'-mon_id').setValue(dato1['mon_id']);
													Ext.getCmp(notaventas.id+'-afecta_almacen').setValue(true);
													if(dato1['formato']=='S'){
														Ext.getCmp(notaventas.id+'-inc_igv').setValue(true);
													}else{
														Ext.getCmp(notaventas.id+'-inc_igv').setValue(false);
													}
													Ext.getCmp(notaventas.id+'-guias_asignadas').store.removeAll(false);
													
													for (i=0;i<res.data.length;i++){
														detalle = res.data[i];
														var u = new notaventas.store_reader.recordType({
															id:detalle['pro_id'],cantidad:detalle['cantidad'],codigo:detalle['codigo1'],detalle:detalle['producto'],marca:detalle['mar_nom'],precio:detalle['precio_venta'],descuento:detalle['descuento'],total:detalle['total'],ume_id:detalle['ume_id']
														});
														grid_guiasAsignadas.stopEditing();
														notaventas.store_reader.insert(notaventas.store_reader.getCount(), u);
														grid_guiasAsignadas.startEditing(notaventas.store_reader.getCount()-1,1);
													}
													
													
													notaventas.calcular();
													}else{
														alert(res.mensaje);	
													}
												}
											});
										}
									},
								}
                            }
                        ]
                    },
                    {
                        xtype:'panel',layout:'form',
                        border:true,columnWidth:1,height:150,/*autoScroll:true,*/
                        bodyStyle:'margin-bottom:7px',
                        items:
                        [        
                            grid_guiasAsignadas
                        ]
                    }					
                    ,
                    {
                        xtype:'panel',labelWidth:80,layout:'form',
                        border:false,columnWidth:.2,
                        items:
                        [        
                            {
                                xtype:'textfield',
                                id:notaventas.id+'-valor_bruto',
                                fieldLabel:'Valor Bruto S/.',
                                itemCls: 'label01',
                                style:{marginLeft:'0px',textAlign:'right'},
                                width:70,
                                readOnly:true
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:80,layout:'form',
                        border:false,columnWidth:.18,
                        items:
                        [        
                            {
                                xtype:'textfield',
                                id:notaventas.id+'-valor_descuento',
                                fieldLabel:'Descuento S/.',
                                itemCls: 'label01',
                                style:{marginLeft:'0px',textAlign:'right'},
                                width:60,
                                readOnly:true
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:90,layout:'form',
                        border:false,columnWidth:.22,
                        items:
                        [        
                            {
                                xtype:'textfield',
                                id:notaventas.id+'-valor_venta',
                                fieldLabel:'Valor NCV',
                                itemCls: 'label01',
                                style:{marginLeft:'0px',textAlign:'right'},
                                width:70,
                                readOnly:true
                            }
                        ]
                    }
                    ,
                    {
                        xtype:'panel',labelWidth:80,layout:'form',
                        border:false,columnWidth:.18,
                        items:
                        [        
                            {
                                xtype:'textfield',
                                id:notaventas.id+'-impuesto_igv',
                                fieldLabel:'Imp. IGV',
                                itemCls: 'label01',
                                style:{marginLeft:'0px',textAlign:'right'},
                                width:60,
                                readOnly:true
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:90,layout:'form',
                        border:false,columnWidth:.22,
                        items:
                        [        
                            {
                                xtype:'textfield',
                                id:notaventas.id+'-total_venta',
                                fieldLabel:'Total NCV',
                                itemCls: 'label01',
                                style:{marginLeft:'0px',textAlign:'right'},
                                width:70,
                                readOnly:true
                            }
                        ]
                    }
					,
                    {
                        xtype:'panel',labelWidth:80,layout:'form',
                        border:false,columnWidth:0.6,
                        items:
                        [        
                            {
                                xtype:'textarea',
                                id:notaventas.id+'-observacion',
                                fieldLabel:'Observacion',
                                itemCls: 'label01',
                                style:{marginLeft:'7px',textAlign:'left'},
                                width:300,
								height:40
                            }
                        ]
                    }
					,
                    {
                        xtype:'label',
						id:notaventas.id+'-msganulado',
                        columnWidth:0.4,
						text:'DOCUMENTO ANULADO',
						style:{color:'#ff0000',fontSize:'20px'}
                    }
                ]
            }

            ]
            });
            
            var panel = new Ext.Panel({  
            layout: 'border',
            tbar:[
                    {
                        xtype: 'toolbar',
                        dock: 'top',
                        items: [
                            btn_nuevo,'-',btn_guardar,btn_actualizar,btn_editar,'-',btn_anular,btn_eliminar,'-',btn_imprimir,btn_cancelar,
                            combo_compras_describe,'-',
                    new Ext.app.SearchField({
                        id:notaventas.id+'-buscar', 
                        emptyText : 'Valor a buscar...',
                        enableKeyEvents: true,
                        store: store_notaventas_lista,
                        hasSearch : false,
                        width: 120,
                        listeners:
                        {
                            specialkey:function(obj,e)
                            {
                                if(e.getKey() == 13)
                                {
                                    store_notaventas_lista.load({params:{campo:Ext.getCmp(notaventas.id+'-combo_describe').getValue(),query:Ext.getCmp(notaventas.id+'-buscar').getValue()}});
                                }
                            }
                        }
                    })
                    
                        ]
                    }],
            bodyStyle:'height:auto;width:70%;margin:auto;',
            border:false,
            items: [
            {  
                region: 'west',
                layout:'fit',
                xtype: 'panel',
                width:'100%',
                autoScroll: true,  
                border:false,
                items:
                [
                    grid_notaventas_lista
                    
                ]
            }
            ,
            {
            region:'center',
            width:'0',
            height:'0'
            }
            ,
            {  
                id:notaventas.id+'-panel_derecho',
                region: 'east',
                xtype: 'panel',
                collapsible:true,
                layout: 'form',
                split:true,
                collapsed:true,
                width:'100%',
                border:false,
                items:
                [
                    panel_form
                ]  
            }
      ]  
    });
            
            new Ext.Window({
                                        id:'win_notaventas',
                                        title:'Listado de Notas de Credito de Ventas', 
                                        width: 1024,
                                        height:500,
                                        layout:'fit',
                                        border:false,
                                        frame:true,
                                        autoDestroy:true,
                                        autoScroll:false,
                                        minimizable: false,
                                        maximizable: false,
                                        closable:true,
                                        collapsible:false,
                                        draggable:true,
                        onEsc:function(){Ext.getCmp('win_notaventas').close();}, resizable:true,
                        items:panel,
                        buttonAlign:'center'
            });
            
            Ext.getCmp('win_notaventas').show();
            Ext.getCmp('win_notaventas').center();
            Ext.getCmp('win_notaventas').toFront();
            notaventas.fn_habilitar(false,0);
			//store_notaventas_lista.load({params:{start:0,limit:100}});
            Ext.getCmp(notaventas.id+'-panel_derecho').collapse();
							Ext.getCmp(notaventas.id+'-panel_derecho').setVisible(false);
            
            
                
            
        },
        fn_nuevo:function()
        {
			Ext.Msg.wait('Generando código de Venta... por favor espere!');
            Ext.Ajax.request({
				url:'movimientos/notaventas-codigo',
				params:
				{
					table:'movimientos_notaventas'
				},
				success:function(response,options)
				{   
					Ext.Msg.hide();
					var res = Ext.decode(response.responseText);						
					var numero="000000000"+res.codigo;
					//alert(numero);
					var agencia= "000"+vgIdTienda;
					//alert(agencia);
					var codigo="NCV"+agencia.substr(agencia.length-3,3)+numero.substr(numero.length-9,9)
					Ext.getCmp(notaventas.id+'-codigo').setValue(codigo);
				}
			});            
            
			Ext.getCmp(notaventas.id+'-tipo_ingreso').setValue('1');
			
			Ext.getCmp(notaventas.id+'-clientes_varios').setValue(false);
			Ext.getCmp(notaventas.id+'-cliente').setVisible(false);
			Ext.getCmp(notaventas.id+'-cli_id').setVisible(true);
			Ext.getCmp(notaventas.id+'-cli_ruc').setReadOnly(true);
			Ext.apply(Ext.getCmp(notaventas.id+'-cli_id'),{allowBlank:false});
			Ext.apply(Ext.getCmp(notaventas.id+'-cliente'),{allowBlank:true});
			//Ext.apply(Ext.getCmp(notaventas.id+'-cli_ruc'),{allowBlank:true});
			
			Ext.getCmp(notaventas.id+'-cli_id').setValue('');
			Ext.getCmp(notaventas.id+'-cli_ruc').setValue('');
			Ext.getCmp(notaventas.id+'-cli_codigo').setValue('');
			Ext.getCmp(notaventas.id+'-doc_id').setValue('');
			Ext.getCmp(notaventas.id+'-numero').setValue('');
			Ext.getCmp(notaventas.id+'-tnt_id').setValue('');
			
			Ext.getCmp(notaventas.id+'-guia_remision').setValue('');
			Ext.getCmp(notaventas.id+'-cpa_id').setValue('1');
			Ext.getCmp(notaventas.id+'-mon_id').setValue('1');
			Ext.getCmp(notaventas.id+'-afecta_almacen').setValue(true);
			Ext.getCmp(notaventas.id+'-inc_igv').setValue(true);
			Ext.getCmp(notaventas.id+'-msganulado').setVisible(false);
			Ext.getCmp(notaventas.id+'-observacion').setValue('');
			
			notaventas.fn_habilitar(true,1);
			Ext.getCmp(notaventas.id+'-guias_asignadas').store.removeAll(false);
        },
        fn_editar:function()
        {
            var rs=Ext.getCmp(notaventas.id+'-grid_lista').getSelectionModel().getSelected();
            if(rs)
            {				
				Ext.getCmp(notaventas.id+'-panel_derecho').expand();
				Ext.getCmp(notaventas.id+'-panel_derecho').setVisible(true);
				Ext.getCmp(notaventas.id+'-msganulado').setVisible(false);
                notaventas.fn_habilitar(true,2);
				if(rs.get('anulado')=='1'){
					Ext.getCmp(notaventas.id+'-btn_actualizar').setVisible(false);
					Ext.getCmp(notaventas.id+'-msganulado').setVisible(true);
				}
				
				Ext.getCmp(notaventas.id+'-nve_id').setValue(rs.get('nve_id'));
				var numero="000000000"+rs.get('codigo');
				var agencia= "000"+vgIdTienda;
				var codigo="NCV"+agencia.substr(agencia.length-3,3)+numero.substr(numero.length-9,9)
				
				Ext.getCmp(notaventas.id+'-codigo').setValue(codigo);
				Ext.getCmp(notaventas.id+'-tipo_ingreso').setValue(rs.get('tipo_ingreso'));
				Ext.getCmp(notaventas.id+'-fecha').setValue(rs.get('fec_ven'));
				//alert(rs.get('cli_id'));
				if(rs.get('cli_id')=='0'){
					Ext.getCmp(notaventas.id+'-clientes_varios').setValue(true);
					//alert("Despues");
					Ext.getCmp(notaventas.id+'-cli_id').setVisible(false);
					Ext.getCmp(notaventas.id+'-cliente').setVisible(true);
					Ext.getCmp(notaventas.id+'-cli_ruc').setReadOnly(false);
					Ext.apply(Ext.getCmp(notaventas.id+'-cli_id'),{allowBlank:true});
					Ext.apply(Ext.getCmp(notaventas.id+'-cliente'),{allowBlank:false});
					//Ext.apply(Ext.getCmp(notaventas.id+'-cli_ruc'),{allowBlank:false});
				}else{
					Ext.getCmp(notaventas.id+'-clientes_varios').setValue(false);
					//alert("Despues");
					Ext.getCmp(notaventas.id+'-cliente').setVisible(false);
					Ext.getCmp(notaventas.id+'-cli_id').setVisible(true);
					Ext.getCmp(notaventas.id+'-cli_ruc').setReadOnly(true);
					Ext.apply(Ext.getCmp(notaventas.id+'-cli_id'),{allowBlank:false});
					Ext.apply(Ext.getCmp(notaventas.id+'-cliente'),{allowBlank:true});
					//Ext.apply(Ext.getCmp(notaventas.id+'-cli_ruc'),{allowBlank:true});
				}
				
				Ext.getCmp(notaventas.id+'-cliente').setValue(rs.get('nombre_cliente'));	
				
				Ext.getCmp(notaventas.id+'-cli_id').store.load({params:{campo:'cli_id',query:rs.get('cli_id'),start:0,limit:1}});
				Ext.getCmp(notaventas.id+'-cli_id').setValue(rs.get('cli_id'));
				Ext.getCmp(notaventas.id+'-cli_id').setRawValue(rs.get('nombre_cliente'));
				
				Ext.getCmp(notaventas.id+'-cli_ruc').setValue(rs.get('ruc'));
				Ext.getCmp(notaventas.id+'-cli_codigo').setValue(rs.get('cli_codigo'));
				Ext.getCmp(notaventas.id+'-doc_id').setValue(rs.get('doc_id'));
				Ext.getCmp(notaventas.id+'-numero').setValue(rs.get('doc_n'));
				Ext.getCmp(notaventas.id+'-tnt_id').setValue(rs.get('tnt_id'));
				Ext.getCmp(notaventas.id+'-guia_remision').setValue(rs.get('n_guia'));
				Ext.getCmp(notaventas.id+'-cpa_id').setValue(rs.get('cpa_id'));
				Ext.getCmp(notaventas.id+'-mon_id').setValue(rs.get('mon_id'));
				Ext.getCmp(notaventas.id+'-observacion').setValue(rs.get('observacion'));
Ext.getCmp(notaventas.id+'-direccion').setValue('');
				
				if(rs.get('afecta')=='S'){
					Ext.getCmp(notaventas.id+'-afecta_almacen').setValue(true);
				}else{
					Ext.getCmp(notaventas.id+'-afecta_almacen').setValue(false);
				}
				if(rs.get('formato')=='S'){
					Ext.getCmp(notaventas.id+'-inc_igv').setValue(true);
				}else{
					Ext.getCmp(notaventas.id+'-inc_igv').setValue(false);	
				}
				Ext.Msg.wait('Cargando detalle de Nota de Credito... por favor espere!');
				Ext.Ajax.request({
					url:'movimientos/notaventas-detalle',
					params:
					{
						nve_id:rs.get('nve_id')
					},
					success:function(response,options)
					{     
						Ext.Msg.hide();        
						//alert(response.responseText);
						var res = Ext.decode(response.responseText);
						Ext.getCmp(notaventas.id+'-guias_asignadas').store.removeAll(false);						
						for (i=0;i<res.data.length;i++){
							//alert(res.data[i]);
							detalle = res.data[i];
							var u = new notaventas.store_reader.recordType({
								id:detalle['pro_id'],cantidad:detalle['cantidad'],codigo:detalle['codigo1'],detalle:detalle['producto'],precio:detalle['precio_venta'],descuento:detalle['descuento'],total:detalle['total'],ume_id:detalle['ume_id'], marca:detalle['marca']
							});
							//alert(detalle['pro_id']);
							Ext.getCmp(notaventas.id+'-guias_asignadas').stopEditing();
							notaventas.store_reader.insert(notaventas.store_reader.getCount(), u);
							Ext.getCmp(notaventas.id+'-guias_asignadas').startEditing(notaventas.store_reader.getCount()-1,1);
						}		
						//alert("salir");			
						notaventas.calcular();			
					}
				});
            }
            else
            {
                og.msg("Error","Seleccione un registro");
            }
        },
        fn_actualizar:function()
        {
			if(notaventas.fn_validar()){
				if(Ext.getCmp(notaventas.id+'-afecta_almacen').getValue()){
					vAfecta = 'S';	
				}else{
					vAfecta = 'N';	
				}
				if(Ext.getCmp(notaventas.id+'-inc_igv').getValue()){
					vFormato = 'S';	
				}else{
					vFormato = 'N';	
				}
				var vData= new Array();
				var v_detalle= new Array();
				for(i=0;i<Ext.getCmp(notaventas.id+'-guias_asignadas').store.getCount();i++)
				{
					datos=Ext.getCmp(notaventas.id+'-guias_asignadas').getStore(0).getAt(i);
					vValore = datos.get('id') + '.@.' + datos.get('cantidad') + '.@.' + datos.get('codigo') + '.@.' + datos.get('detalle') + '.@.' + datos.get('precio') + '.@.' + datos.get('descuento') + '.@.' + datos.get('total') + '.@.' + datos.get('ume_id') + '.@.' + vAfecta + '.@.' + datos.get('valor_bruto') + '.@.' + datos.get('valor_desc');
					vData[i] = vValore;
				}
				if(Ext.getCmp(notaventas.id+'-clientes_varios').getValue()){
					vIdCli='0';
					vCli = Ext.getCmp(notaventas.id+'-cliente').getValue();
					vRuc = Ext.getCmp(notaventas.id+'-cli_ruc').getValue();
				}else{
					vIdCli = Ext.getCmp(notaventas.id+'-cli_id').getValue();
					vCli = Ext.getCmp(notaventas.id+'-cli_id').getRawValue();
					vRuc = Ext.getCmp(notaventas.id+'-cli_ruc').getValue();
				}
				Ext.getCmp(notaventas.id+'-formulario').getForm().submit({						
					method: 'POST',
					url:'movimientos/notaventas-actualizar',
					params:{ 
						nve_id:Ext.getCmp(notaventas.id+'-nve_id').getValue(),
						codigo:Ext.getCmp(notaventas.id+'-codigo').getValue(),
						cli_id:vIdCli,
						cliente:vCli,
						cli_ruc:vRuc,
						tipo_ingreso:Ext.getCmp(notaventas.id+'-tipo_ingreso').getValue(),
						doc_id:Ext.getCmp(notaventas.id+'-doc_id').getValue(),
						doc_n:Ext.getCmp(notaventas.id+'-numero').getValue(),
						tnt_id:Ext.getCmp(notaventas.id+'-tnt_id').getValue(),
						n_guia:Ext.getCmp(notaventas.id+'-guia_remision').getValue(),
						cpa_id:Ext.getCmp(notaventas.id+'-cpa_id').getValue(),
						mon_id:Ext.getCmp(notaventas.id+'-mon_id').getValue(),
						valor_venta:Ext.getCmp(notaventas.id+'-valor_venta').getValue(),
						valor_bruto:Ext.getCmp(notaventas.id+'-valor_bruto').getValue(),
						valor_desc:Ext.getCmp(notaventas.id+'-valor_descuento').getValue(),
						impuesto_igv:Ext.getCmp(notaventas.id+'-impuesto_igv').getValue(),
						total_venta:Ext.getCmp(notaventas.id+'-total_venta').getValue(),
						fecha:Ext.getCmp(notaventas.id+'-fecha').getValue(),
						tip_doc:Ext.getCmp(notaventas.id+'-doc_id').getRawValue(),
						observacion:Ext.getCmp(notaventas.id+'-observacion').getValue(),
						afecta_stock:vAfecta,
						formato:vFormato,
						igv:18,
						"v_detalle[]":vData,
					},
					waitTitle: 'Actualizando Informacion',
					waitMsg: 'Enviando datos..',
					success: function(form, action){			
					alert(action.response.responseText);		
						var res = Ext.decode(action.response.responseText);
						if(res.success){
							Ext.getCmp(notaventas.id+'-panel_derecho').collapse();
							Ext.getCmp(notaventas.id+'-panel_derecho').setVisible(false);
							og.msg("Ok","El registro se ha guardado");
							notaventas.fn_habilitar(false,0);
							Ext.getCmp(notaventas.id+'-grid_lista').store.load();
						}else{
							og.msg("Error",res.mensaje);
							Ext.getCmp(notaventas.id+res.campo).focus(true,10);							
						}
						Ext.getCmp(notaventas.id+'-formulario').getForm().reset();
					},
					failure: function(form, action){
						alert(action.response.responseText);
						var res = Ext.decode(action.response.responseText);
						Ext.Msg.show({
							title:'Error',
							msg: res.mensaje,
							   buttons: Ext.Msg.OK,
							   icon: Ext.MessageBox.ERROR
						});
						Ext.getCmp(notaventas.id+res.campo).focus(true,10);							
					}
				});				
				/*Ext.Ajax.request({
					url:'movimientos/notaventas-guardar',
					params:
					{
						nve_id:Ext.getCmp(notaventas.id+'-nve_id').getValue(),
						codigo:Ext.getCmp(notaventas.id+'-codigo').getValue(),
						cli_id:Ext.getCmp(notaventas.id+'-cli_id').getValue(),
						tipo_ingreso:Ext.getCmp(notaventas.id+'-tipo_ingreso').getValue().getGroupValue(),
						doc_id:Ext.getCmp(notaventas.id+'-doc_id').getValue(),
						doc_n:Ext.getCmp(notaventas.id+'-numero').getValue(),
						n_guia:Ext.getCmp(notaventas.id+'-guia_remision').getValue(),
						cpa_id:Ext.getCmp(notaventas.id+'-cpa_id').getValue(),
						mon_id:Ext.getCmp(notaventas.id+'-mon_id').getValue(),
						valor_venta:Ext.getCmp(notaventas.id+'-valor_venta').getValue(),
						impuesto_igv:Ext.getCmp(notaventas.id+'-impuesto_igv').getValue(),
						total_venta:Ext.getCmp(notaventas.id+'-total_venta').getValue(),
						fecha:Ext.getCmp(notaventas.id+'-fecha').getValue(),
						tip_doc:Ext.getCmp(notaventas.id+'-doc_id').getRawValue(),
						afecta_stock:vAfecta,
						"v_detalle[]":vData,
					},
					success:function(response,options)
					{
						var res = Ext.decode(response.responseText);
						if(res.success){
							Ext.getCmp(notaventas.id+'-panel_derecho').collapse();
							Ext.getCmp(notaventas.id+'-panel_derecho').setVisible(false);
							og.msg("Ok","El registro se ha guardado");
							notaventas.fn_habilitar(false,0);
							Ext.getCmp(notaventas.id+'-grid_lista').store.load();
						}else{
							og.msg("Error",res.mensaje);
							Ext.getCmp(notaventas.id+res.campo).focus(true,10);							
						}
					}
				});*/
			}
        },
        fn_guardar:function()
        {	
			if(notaventas.fn_validar()){
				if(Ext.getCmp(notaventas.id+'-afecta_almacen').getValue()){
					vAfecta = 'S';	
				}else{
					vAfecta = 'N';	
				}
				if(Ext.getCmp(notaventas.id+'-inc_igv').getValue()){
					vFormato = 'S';	
				}else{
					vFormato = 'N';	
				}
				var vData= new Array();
				var v_detalle= new Array();
				for(i=0;i<Ext.getCmp(notaventas.id+'-guias_asignadas').store.getCount();i++)
				{
					datos=Ext.getCmp(notaventas.id+'-guias_asignadas').getStore(0).getAt(i);
					vValore = datos.get('id') + '.@.' + datos.get('cantidad') + '.@.' + datos.get('codigo') + '.@.' + datos.get('detalle') + '.@.' + datos.get('precio') + '.@.' + datos.get('descuento') + '.@.' + datos.get('total') + '.@.' + datos.get('ume_id') + '.@.' + vAfecta + '.@.' + datos.get('valor_bruto') + '.@.' + datos.get('valor_desc');
					vData[i] = vValore;
				}
				if(Ext.getCmp(notaventas.id+'-clientes_varios').getValue()){
					vIdCli='0';
					vCli = Ext.getCmp(notaventas.id+'-cliente').getValue();
					vRuc = Ext.getCmp(notaventas.id+'-cli_ruc').getValue();
				}else{
					vIdCli = Ext.getCmp(notaventas.id+'-cli_id').getValue();
					vCli = Ext.getCmp(notaventas.id+'-cli_id').getRawValue();
					vRuc = Ext.getCmp(notaventas.id+'-cli_ruc').getValue();
				}
				Ext.getCmp(notaventas.id+'-formulario').getForm().submit({						
					method: 'POST',
					url:'movimientos/notaventas-guardar',
					params:{ 
						codigo:Ext.getCmp(notaventas.id+'-codigo').getValue(),
						cli_id:vIdCli,
						cliente:vCli,
						cli_ruc:vRuc,
						tipo_ingreso:Ext.getCmp(notaventas.id+'-tipo_ingreso').getValue(),
						doc_id:Ext.getCmp(notaventas.id+'-doc_id').getValue(),
						doc_n:Ext.getCmp(notaventas.id+'-numero').getValue(),
						tnt_id:Ext.getCmp(notaventas.id+'-tnt_id').getValue(),
						n_guia:Ext.getCmp(notaventas.id+'-guia_remision').getValue(),
						cpa_id:Ext.getCmp(notaventas.id+'-cpa_id').getValue(),
						mon_id:Ext.getCmp(notaventas.id+'-mon_id').getValue(),
						valor_venta:Ext.getCmp(notaventas.id+'-valor_venta').getValue(),
						valor_bruto:Ext.getCmp(notaventas.id+'-valor_bruto').getValue(),
						valor_desc:Ext.getCmp(notaventas.id+'-valor_descuento').getValue(),
						impuesto_igv:Ext.getCmp(notaventas.id+'-impuesto_igv').getValue(),
						total_venta:Ext.getCmp(notaventas.id+'-total_venta').getValue(),
						fecha:Ext.getCmp(notaventas.id+'-fecha').getValue(),
						tip_doc:Ext.getCmp(notaventas.id+'-doc_id').getRawValue(),
						observacion:Ext.getCmp(notaventas.id+'-observacion').getValue(),
						afecta_stock:vAfecta,
						formato:vFormato,
						igv:18,
						"v_detalle[]":vData,
					},
					waitTitle: 'Guardando Informacion',
					waitMsg: 'Enviando datos..',
					success: function(form, action){	
						//alert(action.response.responseText);				
						var res = Ext.decode(action.response.responseText);
						if(res.success){
							Ext.getCmp(notaventas.id+'-panel_derecho').collapse();
							Ext.getCmp(notaventas.id+'-panel_derecho').setVisible(false);
							og.msg("Ok","El registro se ha guardado");
							notaventas.fn_habilitar(false,0);
							Ext.getCmp(notaventas.id+'-grid_lista').store.load();
						}else{
							og.msg("Error",res.mensaje);
							Ext.getCmp(notaventas.id+res.campo).focus(true,10);							
						}
						Ext.getCmp(notaventas.id+'-formulario').getForm().reset();
					},
					failure: function(form, action){
						//alert(action.response.responseText);		
						var res = Ext.decode(action.response.responseText);
						Ext.Msg.show({
							title:'Error',
							msg: res.mensaje,
							   buttons: Ext.Msg.OK,
							   icon: Ext.MessageBox.ERROR
						});
						Ext.getCmp(notaventas.id+res.campo).focus(true,10);							
					}
				});				

				/*Ext.Ajax.request({
					url:'movimientos/notaventas-guardar',
					params:
					{
						codigo:Ext.getCmp(notaventas.id+'-codigo').getValue(),
						cli_id:Ext.getCmp(notaventas.id+'-cli_id').getValue(),
						tipo_ingreso:Ext.getCmp(notaventas.id+'-tipo_ingreso').getValue().getGroupValue(),
						doc_id:Ext.getCmp(notaventas.id+'-doc_id').getValue(),
						doc_n:Ext.getCmp(notaventas.id+'-numero').getValue(),
						n_guia:Ext.getCmp(notaventas.id+'-guia_remision').getValue(),
						cpa_id:Ext.getCmp(notaventas.id+'-cpa_id').getValue(),
						mon_id:Ext.getCmp(notaventas.id+'-mon_id').getValue(),
						valor_venta:Ext.getCmp(notaventas.id+'-valor_venta').getValue(),
						impuesto_igv:Ext.getCmp(notaventas.id+'-impuesto_igv').getValue(),
						total_venta:Ext.getCmp(notaventas.id+'-total_venta').getValue(),
						fecha:Ext.getCmp(notaventas.id+'-fecha').getValue(),
						tip_doc:Ext.getCmp(notaventas.id+'-doc_id').getRawValue(),
						afecta_stock:vAfecta,
						formato:vFormato,
						igv:18,
						"v_detalle[]":vData,
					},
					success:function(response,options)
					{
						var res = Ext.decode(response.responseText);
						if(res.success){
							Ext.getCmp(notaventas.id+'-panel_derecho').collapse();
							Ext.getCmp(notaventas.id+'-panel_derecho').setVisible(false);
							og.msg("Ok","El registro se ha guardado");
							notaventas.fn_habilitar(false,0);
							Ext.getCmp(notaventas.id+'-grid_lista').store.load();
						}else{
							og.msg("Error",res.mensaje);
							Ext.getCmp(notaventas.id+res.campo).focus(true,10);							
						}
					}
				});*/
			}
        },
		fn_anular:function()
        {
            var rs=Ext.getCmp(notaventas.id+'-grid_lista').getSelectionModel().getSelected();
            if(rs)
            {
				if(rs.get('anulado')=='1'){
					og.msg("Error","Documento ya esta anulado");
					return;
				}
				Ext.Msg.confirm('Alerta', 'Desea Anular?<br>Documento :<br>' + rs.get('doc_n'), function(btn) {
					if(btn == 'yes')
					{
						Ext.Msg.wait('Anulando Venta... por favor espere!');
						Ext.Ajax.request({
							url:'movimientos/notaventas-anular',
							params:
							{
								nve_id:rs.get('nve_id')
							},
							success:function(response,options)
							{           
								Ext.Msg.hide();  
								var res = Ext.decode(response.responseText);
								if(res.success){
									og.msg("Ok","El registro se ha anulado");
									notaventas.fn_habilitar(false,0);
									Ext.getCmp(notaventas.id+'-grid_lista').store.load({params:{campo:Ext.getCmp(notaventas.id+'-combo_describe').getValue(),query:Ext.getCmp(notaventas.id+'-buscar').getValue(),start:0,limit:100}});
								}else{
									og.msg("Error",res.mensaje);
									Ext.getCmp(notaventas.id+res.campo).focus(true,10);				
								}
							}
						});
					}
				 });
            }
            else
            {
                og.msg("Error","Seleccione un registro");
            }
        },
        fn_eliminar:function()
        {
            var rs=Ext.getCmp(notaventas.id+'-grid_lista').getSelectionModel().getSelected();
            if(rs)
            {
				Ext.Msg.confirm('Alerta', 'Desea eliminar?<br>Documento :<br>' + rs.get('doc_n'), function(btn) {
					if(btn == 'yes')
					{
						Ext.Msg.wait('Eliminando venta... por favor espere!');
						Ext.Ajax.request({
							url:'movimientos/notaventas-eliminar',
							params:
							{
								nve_id:rs.get('nve_id')
							},
							success:function(response,options)
							{             			
								Ext.Msg.hide();
								var res = Ext.decode(response.responseText);
								if(res.success){
									og.msg("Ok","El registro se ha eliminado");
									notaventas.fn_habilitar(false,0);
									Ext.getCmp(notaventas.id+'-grid_lista').store.load({params:{campo:Ext.getCmp(notaventas.id+'-combo_describe').getValue(),query:Ext.getCmp(notaventas.id+'-buscar').getValue(),start:0,limit:100}});
								}else{
									og.msg("Error",res.mensaje);
									Ext.getCmp(notaventas.id+res.campo).focus(true,10);				
								}
							}
						});
					}
				 });
            }
            else
            {
                og.msg("Error","Seleccione un registro");
            }
        },		
        calcular:function()
        {
            var valor_venta='0';
			var valor_bruto='0';
            var impuesto_igv='0';
            var total_venta='0';
			var valor_desc ='0';
            var datos='';
            for(i=0;i<Ext.getCmp(notaventas.id+'-guias_asignadas').store.getCount();i++)
            {
                datos=Ext.getCmp(notaventas.id+'-guias_asignadas').getStore(0).getAt(i);
				
				vValor = Number(datos.get('cantidad')) * Number(datos.get('precio'));
				vBruto = vValor;
				vBruto = Math.round(vBruto*100)/100;	
				datos.set('valor_bruto',vBruto);
				
				vDesc = datos.get('descuento');
				var n=vDesc.split("+");
				for(j=0;j<n.length;j++){
					vValor = vValor - (vValor*Number(n[j]))/100;
					vValor = Math.round(vValor*100)/100;	
				}
				
				/*vValor = vValor - (vValor*Number(datos.get('descuento')))/100;
				vValor = Math.round(vValor*100)/100;*/
				datos.set('valor_desc',vBruto - vValor);
				datos.set('total',vValor);
				
				//datos.beginEdit( );
				//datos.set('detalle','Cambio de DATOS');
				datos.set('itemid',i+1);
                valor_venta=Number(valor_venta)+Number(datos.get('total'));
				valor_desc = Number(valor_desc)+Number(datos.get('valor_desc'));
				valor_bruto = Number(valor_bruto)+Number(datos.get('valor_bruto'));
            }
			
			valor_venta= Math.round(valor_venta*100)/100;
			if(Ext.getCmp(notaventas.id+'-inc_igv').getValue()){
				Ext.getCmp(notaventas.id+'-total_venta').setValue(valor_venta);		
				
				impuesto_igv= (valor_venta * 18)  / 118 ;
				impuesto_igv = Math.round(impuesto_igv*100 ) / 100;
				valor_venta=(valor_venta-impuesto_igv);
				
				Ext.getCmp(notaventas.id+'-impuesto_igv').setValue(impuesto_igv);	
				valor_venta = Math.round(valor_venta*100)/100;
				Ext.getCmp(notaventas.id+'-valor_venta').setValue(valor_venta);
			}else{
				
				Ext.getCmp(notaventas.id+'-valor_venta').setValue(Math.round(valor_venta*100)/100);
				impuesto_igv=Math.round(((valor_venta * 18)  / 100)*100)/100 ;
				total_venta=(Number(Math.round(valor_venta*100)/100)+Number(impuesto_igv));
				Ext.getCmp(notaventas.id+'-impuesto_igv').setValue(impuesto_igv);
				Ext.getCmp(notaventas.id+'-total_venta').setValue(total_venta);
			}			
			valor_desc = Math.round(valor_desc*100)/100;	
			Ext.getCmp(notaventas.id+'-valor_descuento').setValue(valor_desc);
			valor_bruto = Math.round(valor_bruto*100)/100;	
			Ext.getCmp(notaventas.id+'-valor_bruto').setValue(valor_bruto);
        },
		fn_validar:function(){
			if(Ext.getCmp(notaventas.id+'-clientes_varios').getValue()){
				if(!Ext.getCmp(notaventas.id+'-cliente').isValid())
				{
					og.msg("Error", "Ingrese el Nombre del Cliente");
					Ext.getCmp(notaventas.id+'-cliente').focus(true,10);
					return false;
				}/*
				if(!Ext.getCmp(notaventas.id+'-cli_ruc').isValid())
				{
					og.msg("Error", "Ingrese el RUC/DNI del Cliente");
					Ext.getCmp(notaventas.id+'-cli_ruc').focus(true,10);
					return false;
				}*/
			}else{
				if(!Ext.getCmp(notaventas.id+'-cli_id').isValid())
				{
					og.msg("Error", "Ingrese el Cliente");
					Ext.getCmp(notaventas.id+'-cli_id').focus(true,10);
					return false;
				}
			}
			//alert("Despueaz");
			if(!Ext.getCmp(notaventas.id+'-doc_id').isValid())
            {
                og.msg("Error", "Ingrese el Documento");
                Ext.getCmp(notaventas.id+'-doc_id').focus(true,10);
                return false;
            }
			if(!Ext.getCmp(notaventas.id+'-numero').isValid())
            {
                og.msg("Error", "Ingrese el Número del Documento");
                Ext.getCmp(notaventas.id+'-numero').focus(true,10);
                return false;
            }
			if(!Ext.getCmp(notaventas.id+'-cpa_id').isValid())
            {
                og.msg("Error", "Ingrese la Condición de Pago");
                Ext.getCmp(notaventas.id+'-cpa_id').focus(true,10);
                return false;
            }
			if(!Ext.getCmp(notaventas.id+'-mon_id').isValid())
            {
                og.msg("Error", "Ingrese la Moneda de Pago");
                Ext.getCmp(notaventas.id+'-mon_id').focus(true,10);
                return false;
            }
			if(Ext.getCmp(notaventas.id+'-guias_asignadas').store.getCount()==0){
				og.msg("Error", "Por favor ingrese detalle del Documento");
                Ext.getCmp(notaventas.id+'-mon_id').focus(true,10);
                return false;
			}
			return true;
		},
		fn_habilitar:function(sw, tipo)
        {
			if(!sw){
				Ext.getCmp(notaventas.id+'-btn_guardar').setVisible(sw);
				Ext.getCmp(notaventas.id+'-btn_actualizar').setVisible(sw);
			}else{
				if(tipo==1){
					Ext.getCmp(notaventas.id+'-btn_guardar').setVisible(sw);
					Ext.getCmp(notaventas.id+'-btn_actualizar').setVisible(!sw);
				}else{
					Ext.getCmp(notaventas.id+'-btn_guardar').setVisible(!sw);
					Ext.getCmp(notaventas.id+'-btn_actualizar').setVisible(sw);
				}
			}
			Ext.getCmp(notaventas.id+'-btn_nuevo').setVisible(!sw);			
			Ext.getCmp(notaventas.id+'-btn_cancelar').setVisible(sw);
			
			Ext.getCmp(notaventas.id+'-btn_editar').setVisible(!sw);
			Ext.getCmp(notaventas.id+'-btn_eliminar').setVisible(!sw);
			Ext.getCmp(notaventas.id+'-btn_anular').setVisible(!sw);

			Ext.getCmp(notaventas.id+'-btn_editar').disable();
			Ext.getCmp(notaventas.id+'-btn_eliminar').disable();
			Ext.getCmp(notaventas.id+'-btn_anular').disable();
			
			Ext.getCmp(notaventas.id+'-buscar').setVisible(!sw);			
			Ext.getCmp(notaventas.id+'-combo_describe').setVisible(!sw);
			
			Ext.getCmp(notaventas.id+'-btn_imprimir').setVisible(!sw);			
        },
		fn_buscar_producto:function(){
			var btn_cerrar=new Ext.Button({
                id:notaventas.id+'-btn_cerrar',
                text:'Cerrar',
                iconCls:'btn_cancel_log',
                listeners:
                    {
                        click:function()
                        {
                            Ext.getCmp('win_buscar_mercaderias_compras').close();
                        }
                    }
            });
            
            var store_mercaderias_lista_stock=new Ext.data.JsonStore({
                url:'maestros/mercaderias-lista',
                root:'data',
                totalProperty:'total',
                fields:['mcd_id','codigo1','codigo2','codigo3','nombre','ume_id','mar_id','lin_id','precio_costo','precio_venta','stock_minimo','stock_actual', 'utilidad', 'desc1', 'desc2', 'desc3', 'desc4','activo', 'fam_id', 'ume_nom', 'precio_compra', 'ind_calculo','mar_nom', 'stock_pro'],
				remoteSort:true,
				sortInfo: {field:'nombre', direction:'asc'}
            });

            var store_mercaderias_describe=new Ext.data.JsonStore({
                url:'maestros/mercaderias-describe',
                root:'data',
                totalProperty:'total',
                fields:['Field']
            });
			
			var store_lineasbusq_lista=new Ext.data.JsonStore({
                url:'tablas/lineas-lista',
                root:'data',
                totalProperty:'total',
                fields:['lin_id','nombre']
            });
			store_lineasbusq_lista.load();
			var combo_lineas_busq=new Ext.form.ComboBox({
                id:notaventas.id+'-combo_lineas_busq',
                store:store_lineasbusq_lista,
                valueField:'lin_id',
                displayField:'nombre',
                triggerAction:'all',
                emptyText:'Linea',
                mode:'local',
                width:200,
                editable:false,
				listeners:
					{
						select:function(cmb,record,index)
						{
							store_mercaderias_lista_stock.load({params:{lin_id:cmb.getValue(),campo:Ext.getCmp(notaventas.id+'-combo_describe_mercaderias').getValue(),query:Ext.getCmp(notaventas.id+'-buscar_mercaderia').getValue(),start:0,limit:100}});
						}
					}
            });
            
            store_mercaderias_describe.load({params:{table:'maestros_mercaderias'}});
            
            var pagerStock = new Ext.PagingToolbar({
                id:notaventas.id+'_pager',
                store:store_mercaderias_lista_stock,
                displayInfo: true,
                displayMsg: '{0} - {1} de {2} Registros',
                emptyMsg: 'No existen registros',
                pageSize:100
            });
			
			pagerStock.on('beforechange',function(bar,params){  
				params.campo = Ext.getCmp(notaventas.id+'-combo_describe_mercaderias').getValue();
				params.query = Ext.getCmp(notaventas.id+'-buscar_mercaderia').getValue();
				params.lin_id = Ext.getCmp(notaventas.id+'-combo_lineas_busq').getValue();
			}); 
            
            var combo_mercaderias_describe=new Ext.form.ComboBox({
                id:notaventas.id+'-combo_describe_mercaderias',
                store:store_mercaderias_describe,
                valueField:'Field',
                displayField:'Field',
                triggerAction:'all',
                emptyText:'Campo',
                mode:'local',
                width:100,
                editable:false
            });
            
            var grid_mercaderias_lista_stock = new Ext.grid.GridPanel({
                id:notaventas.id+'-grid_mercaderias_lista_stock',
                store: store_mercaderias_lista_stock,
                singleSelect:true,
                forceSelection:true,
                columnLines:true,
                width:'580',
                stateful: true,
                loadMask:true,
                sm: new Ext.grid.RowSelectionModel({
                    singleSelect:true
                }),
                bbar:pagerStock,
                columns:
                [
                    {header:'Id',sortable :true,dataIndex:'mcd_id',width:25,hidden:true},
                    {header:'Código 1',sortable :true,dataIndex:'codigo1',width:100},
                    {header:'Código 2',sortable :true,dataIndex:'codigo2',width:100},
                    {header:'Código 3',sortable :true,dataIndex:'codigo3',width:100,hidden:true},
                    {header:'Descripción',sortable :true,dataIndex:'nombre',width:250},
                    {header:'Marca',sortable :true,dataIndex:'mar_nom',width:100},
					{header:'Unidad de Medida',sortable :true,dataIndex:'ume_nom',width:100,hidden:true},
					{header:'Stock',sortable :true,dataIndex:'stock_pro',width:75,align:'right'},
					<?php if($this->usp_id<>7){?>
                    {header:'P. Compra',sortable :true,dataIndex:'precio_compra',width:75,align:'right',hidden:true},
					{header:'P. Costo',sortable :true,dataIndex:'precio_costo',width:75,align:'right'},
					<?php }?>
                    {header:'P. Venta',sortable :true,dataIndex:'precio_venta',width:75,align:'right'},
					{header:'Tipo',sortable :true,dataIndex:'tipo_mcd',width:40,align:'left'},
                    {header:'Stock Mínimo',sortable :true,dataIndex:'stock_minimo',width:100,align:'right',hidden:true},
					{header:'% Incremento',sortable :true,dataIndex:'utilidad',width:100,align:'right',hidden:true},
					{header:'% Desc 1',sortable :true,dataIndex:'desc1',width:100,align:'right',hidden:true},
					{header:'% Desc 2',sortable :true,dataIndex:'desc2',width:100,align:'right',hidden:true},
					{header:'% Desc 3',sortable :true,dataIndex:'desc3',width:100,align:'right',hidden:true},
					{header:'% Desc 4',sortable :true,dataIndex:'desc4',width:100,align:'right',hidden:true},
                    {header:'Estado',sortable :true,dataIndex:'activo',width:100,hidden:true}
                    ],
                listeners:
                {
                    rowdblclick:function()
                    {
                        var rs=Ext.getCmp(notaventas.id+'-grid_mercaderias_lista_stock').getSelectionModel().getSelected();
						
						if(rs)
			            {
							Ext.getCmp('win_buscar_mercaderias_compras').close();
							var u = new notaventas.store_reader.recordType({
								id:rs.get('mcd_id'),cantidad:'',codigo:rs.get('codigo1'),detalle:rs.get('nombre'),marca:rs.get('mar_nom'),precio:rs.get('precio_venta'),descuento:'0',total:rs.get('precio_venta'),ume_id:rs.get('ume_id')
							});
							//alert("antes");
							Ext.getCmp(notaventas.id+'-guias_asignadas').stopEditing();
							notaventas.store_reader.insert(notaventas.store_reader.getCount(), u);
							Ext.getCmp(notaventas.id+'-guias_asignadas').startEditing(notaventas.store_reader.getCount()-1,1);
							//alert("despues");
							notaventas.calcular();
						}else{
							alert('No ha seleccionado ningun producto');
						}
                    }
                }
            });
            
            
            
            
            var panel2 = new Ext.Panel({  
            layout: 'border',

                                        tbar:[
                    {
                        xtype: 'toolbar',
                        dock: 'top',
                        items: [
                            combo_lineas_busq,combo_mercaderias_describe,'-',
                    new Ext.app.SearchField({
                        id:notaventas.id+'-buscar_mercaderia', 
                        emptyText : 'Valor a buscar...',
                        enableKeyEvents: true,
                        store: store_mercaderias_lista_stock,
                        hasSearch : false,
                        width: 120,
                        listeners:
                        {
                            specialkey:function(obj, e)
                            {
                                if (e.getKey() == 13)
                                {
                                store_mercaderias_lista_stock.load({params:{lin_id:Ext.getCmp(notaventas.id+'-combo_lineas_busq').getValue(),campo:Ext.getCmp(notaventas.id+'-combo_describe_mercaderias').getValue(),query:Ext.getCmp(notaventas.id+'-buscar_mercaderia').getValue(),start:0,limit:100}});
                                }
                            }
                        }
                    }),'-',btn_cerrar
                    
                        ]
                    }],
            bodyStyle:'height:auto;width:650px;margin:auto;',
            border:false,
            items: [
            {  
				region: 'center',
				layout:'fit',
				xtype: 'panel',
				width:'640',
				autoScroll: true,  
				border:false,
				items:
				[
					grid_mercaderias_lista_stock
					
				]
			}
					
			  ]  
			});
            
             new Ext.Window({
				id:'win_buscar_mercaderias_compras',
				title:'Mercaderías',
				width: 800,
				height:450,
				layout:'fit',
				border:false,
				frame:true,
				autoDestroy:true,
				autoScroll:false,
				minimizable: false,
				maximizable: false,
				modal:true,
				closable:false,
				collapsible:false,
				draggable:true,
				onEsc:function(){Ext.getCmp('win_buscar_mercaderias_compras').close();},
				resizable:true,
				items:panel2,
				buttonAlign:'center',
				listeners: {
					'beforeclose': function(){ inicio.setActiveStyleSheet('gray'); }
				}
			});
			Ext.getCmp('win_buscar_mercaderias_compras').show();
			Ext.getCmp(notaventas.id+'-combo_describe_mercaderias').setValue('codigo1');
			inicio.setActiveStyleSheet('blue');
			//Ext.getCmp(notaventas.id+'-grid_mercaderias_lista_stock').store.load({params:{start:0,limit:100}});
		},
		fn_ubicacliente:function(vcampo, vvalor, vcodigo, vnombre, vruc, vdireccion){
			//alert('entra');
			Ext.getCmp(notaventas.id+'-cli_id').store.load({params:{campo:vcampo,query:vvalor,start:0,limit:100}});
			Ext.getCmp(notaventas.id+'-cli_id').setValue(vvalor);
			Ext.getCmp(notaventas.id+'-cli_id').setRawValue(vnombre);
			Ext.getCmp(notaventas.id+'-cli_ruc').setValue(vruc);
			Ext.getCmp(notaventas.id+'-cli_codigo').setValue(vcodigo);
			Ext.getCmp(notaventas.id+'-direccion').setValue(vdireccion);
			
		},
		
		fn_imprimir:function()
        {
			document.getElementById('frmReporte-notaventas').action="movimientos/notaventas-lista-impresion";
			document.getElementById('txtpar1').value = Ext.getCmp(notaventas.id+'-combo_describe').getValue();
			document.getElementById('txtpar2').value = Ext.getCmp(notaventas.id+'-buscar').getValue();
			var activePage = Math.ceil((Ext.getCmp(notaventas.id+'_pager').cursor + Ext.getCmp(notaventas.id+'_pager').pageSize) / Ext.getCmp(notaventas.id+'_pager').pageSize);
			document.getElementById('txtpar3').value = activePage;
            document.getElementById('frmReporte-notaventas').submit();
        },
         
    }
    Ext.onReady(notaventas.init,notaventas);

</script>