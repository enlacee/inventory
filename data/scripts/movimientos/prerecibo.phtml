<form id="frmReporte-prerecibo" name="frmReporte-prerecibo" method="post" action="" target="_blank">
  <input type="hidden" name="txtpar1" id="txtpar1" />
  <input type="hidden" name="txtpar2" id="txtpar2" />
  <input type="hidden" name="txtpar3" id="txtpar3" />
</form>
<script type="text/javascript"> 
    var tab = Ext.getCmp(inicio.id+'-tabContent');
	var vFilaSel=-1;
    //if(!Ext.getCmp('tiponovedades-tab')){
    Ext.ns('prerecibo');
    prerecibo={
        id:'prerecibo',
        store_reader_caja:new Ext.data.ArrayStore({  //step 1
            id:prerecibo.id+'-reader_prerecibo',
            fields:[{name:'item'},{name:'concepto'},{name:'cuenta'},{name:'tip_doc'},{name:'nro_doc'},{name:'debe'},{name:'haber'},{name:'tipo'},{name:'doc_id'},{name:'cco_id'}, {name:'deb_hab'}]  
            }),
        init:function(){
            Ext.Ajax.timeout = 180000;
            Ext.QuickTips.init();
            
            var btn_nuevo=new Ext.Button({
                id:prerecibo.id+'-btn_nuevo',
                text:'Nuevo',
                iconCls:'btn_add_log',
                listeners:
                    {
                        click:function()
                        {
                            Ext.getCmp(prerecibo.id+'-panel_derecho').expand();
				Ext.getCmp(prerecibo.id+'-panel_derecho').setVisible(true);
                            prerecibo.fn_nuevo();
                        }
                    }
            });
            
            var btn_guardar=new Ext.Button({
                id:prerecibo.id+'-btn_guardar',
                text:'Guardar',
                iconCls:'btn_save_log',
                listeners:
                    {
                        click:function()
                        {
                            prerecibo.fn_guardar();
                        }
                    }
            });
            
            var btn_actualizar=new Ext.Button({
                id:prerecibo.id+'-btn_actualizar',
                text:'Actualizar',
                iconCls:'btn_update_log',
                listeners:
                    {
                        click:function()
                        {
                            prerecibo.fn_actualizar();
                        }
                    }
            });
            
            var btn_editar=new Ext.Button({
                id:prerecibo.id+'-btn_editar',
                text:'Editar',
                iconCls:'btn_edit_log',
                listeners:
                    {
                        click:function()
                        {
                            prerecibo.fn_editar();
                        }
                    }
            });
            
            var btn_cancelar=new Ext.Button({
                id:prerecibo.id+'-btn_cancelar',
                text:'Cancelar',
                iconCls:'btn_cancel_log',
                listeners:
                    {
                        click:function()
                        {
                            Ext.getCmp(prerecibo.id+'-panel_derecho').collapse();
							Ext.getCmp(prerecibo.id+'-panel_derecho').setVisible(false);
                            prerecibo.fn_habilitar(false,0);
                        }
                    }
            });
            
            var btn_anular=new Ext.Button({
                id:prerecibo.id+'-btn_anular',
                text:'Anular',
                icon:'images/icon/btn_cancelar.png',
                listeners:
                    {
                        click:function()
                        {
							prerecibo.fn_anular();
                        }
                    }
            });
			
			var btn_eliminar=new Ext.Button({
                id:prerecibo.id+'-btn_eliminar',
                text:'Eliminar',
                iconCls:'btn_delete_log',
                listeners:
                    {
                        click:function()
                        {
							prerecibo.fn_eliminar();
                        }
                    }
            });
			
			var btn_imprimir=new Ext.Button({
                id:prerecibo.id+'-btn_imprimir',
                text:'Imprimir',
                icon:'images/icon/printer.png',
                listeners:
                    {
                        click:function()
                        {
                            Ext.Msg.confirm('Alerta', 'Desea imprimir listado?', function(btn) {
                                if(btn == 'yes')
                                {
                                    prerecibo.fn_imprimir();
                                }
                            });
                        }
                    }
            });
			
			var btn_busprv=new Ext.Button({
                id:prerecibo.id+'-btn_busprv',
                text:'Buscar Prov.', hidden:true,
                listeners:
                    {
                        click:function()
                        {
							//alert(vgVentana);
							vgVentana = 'prerecibo';
                           inicio.getForm( 'maestros/buscaproveedores','Busca Proveedores')
                        }
                    }
            });
			
			var btn_buscli=new Ext.Button({
                id:prerecibo.id+'-btn_buscli',
                text:'Buscar Cliente', hidden:true,
                listeners:
                    {
                        click:function()
                        {
							//alert(vgVentana);
							vgVentana = 'prerecibo';
							inicio.getForm( 'maestros/buscaclientes','Busca Clientes')
                        }
                    }
            });
			
			var btn_busper=new Ext.Button({
                id:prerecibo.id+'-btn_busper',
                text:'Buscar Personal',
                listeners:
                    {
                        click:function()
                        {
							//alert(vgVentana);
							vgVentana = 'prerecibo';
							inicio.getForm( 'usuarios/buscapersonal','Busca Clientes')
                        }
                    }
            });

            var store_prerecibo_lista=new Ext.data.JsonStore({
                url:'movimientos/prerecibo-lista',
                root:'data',
                totalProperty:'total',
                fields:['mpr_id','tie_id','codigo','fecha','fecha_reg','tipo_pagador','per_id','per_doc', 'per_nom', 'estado'],
				remoteSort:true,				
				sortInfo: {field:'fecha', direction:'desc'},
            });
			
			 var store_deudas_lista=new Ext.data.JsonStore({
                url:'movimientos/deudas-lista',
                root:'data',
                totalProperty:'total',
                fields:['tipo','fecha','tip_doc','nro_doc','saldo','doc_id'],
				remoteSort:true,				
				sortInfo: {field:'fecha', direction:'desc'}
            });  
			
			
			var pager = new Ext.PagingToolbar({
                id:prerecibo.id+'_pager',
                store:store_prerecibo_lista,
                displayInfo: true,
                displayMsg: '{0} - {1} de {2} Registros',
                emptyMsg: 'No existen registros',
                pageSize:100
            });
			
			pager.on('beforechange',function(bar,params){  
				params.fecha = Ext.getCmp(prerecibo.id+'-fecha_prerecibo').getValue();
			});
            
            
            
            var vstore_proveedores_lista=new Ext.data.JsonStore({
                url:'maestros/proveedores-lista',
                root:'data',
                totalProperty:'total',
                fields:['prv_id','nombre','ruc','codigo']
            });
            
            //vstore_proveedores_lista.load({params:{start:0,limit:100}});
			
			var pagerCmbPrv = new Ext.PagingToolbar({
                id:prerecibo.id+'_pagerCmbPrb',
                store:vstore_proveedores_lista,
                displayInfo: true,
                displayMsg: '{0} - {1} de {2} Registros',
                emptyMsg: 'No existen registros',
                pageSize:100
            });
			
			pagerCmbPrv.on('beforechange',function(bar,params){  
				params.campo = 'nombre';
				params.query = Ext.getCmp(prerecibo.id+'-combo_prv').getValue();
			});
            
            var store_monedas_lista=new Ext.data.JsonStore({
                url:'tablas/monedas-lista',
                root:'data',
                totalProperty:'total',
                fields:['mon_id','nombre']
            });
            
            store_monedas_lista.load();
			
			var store_concepto_pago_lista=new Ext.data.JsonStore({
                url:'tablas/concepto-pago-lista',
                root:'data',
                totalProperty:'total',
                fields:['coc_id','nombre']
            });
			
			var store_concepto_contable_lista=new Ext.data.JsonStore({
                url:'tablas/concepto-contable-lista',
                root:'data',
                totalProperty:'total',
                fields:['cco_id','nombre', 'cuenta']
            });
			
			store_concepto_contable_lista.load();
			
			var store_tipo_pago_lista=new Ext.data.JsonStore({
                url:'tablas/tipo-pago-lista',
                root:'data',
                totalProperty:'total',
                fields:['tpa_id','nombre']
            });

            var store_documentos_lista=new Ext.data.JsonStore({
                url:'tablas/documentos-lista',
                root:'data',
                totalProperty:'total',
                fields:['doc_id','abrev','descripcion','ventas','prerecibo','n_ventas','n_prerecibo','nn_credito','nn_debito','str_serie_n_prerecibo','str_n_prerecibo','str_serie_n_ventas','str_n_ventas','str_serie_nn_credito','str_nn_credito','str_serie_nn_debito','str_nn_debito']
            });
            
            store_documentos_lista.load({params:{campo:'prerecibo',query:'SI'}});
            
            var store_condiciones_pago_lista=new Ext.data.JsonStore({
                url:'tablas/condiciones-pago-lista',
                root:'data',
                totalProperty:'total',
                fields:['cpa_id','codigo','descripcion','dias','letras']
            });
            
            store_condiciones_pago_lista.load();
			
			
            
            var grid_prerecibo_lista = new Ext.grid.GridPanel({
                id:prerecibo.id+'-grid_lista',
                store: store_prerecibo_lista,
                singleSelect:true,
				forceSelection:true,
                columnLines:true,
                monitorResize:true,
                width:226,
                height:300,
				stateful: true,
                loadMask:true,
                sm: new Ext.grid.RowSelectionModel({
                    singleSelect:true
                }),
				bbar:pager,
                columns:
                [
                    {header:'Id',sortable :true,dataIndex:'mpr_id',width:25},
					{header:'Fecha',sortable :true,dataIndex:'fecha',width:70},
                    {header:'Tipo Pagador',sortable :true,dataIndex:'tipo_pagador',width:30},
					{header:'Persona',sortable :true,dataIndex:'per_nom',width:200, align:'left'},
                    {header:'Total',sortable :true,dataIndex:'total',width:100, align:'left'},					
                ]
                ,
                listeners:
                {
                    rowdblclick:function()
                    {
                        Ext.getCmp(prerecibo.id+'-panel_derecho').expand();
				Ext.getCmp(prerecibo.id+'-panel_derecho').setVisible(true);
                        prerecibo.fn_editar();
                    },
					rowclick:function()
                    {
                        Ext.getCmp(prerecibo.id+'-btn_editar').enable();
						Ext.getCmp(prerecibo.id+'-btn_eliminar').enable();
						Ext.getCmp(prerecibo.id+'-btn_anular').enable();
                    }
                }
            });

            
            var grid_caja=new Ext.grid.EditorGridPanel({
                             //tabIndex:27,
                             id:prerecibo.id+'-grid_caja',
                             store: prerecibo.store_reader_caja,
                             clicksToEdit: 1,
                             singleSelect:true,
                             columnLines:true,
                             /*monitorResize:true,*/
                             enableKeyEvents: true,
                             viewConfig:{forceFit:true},
                             /*autoScroll:true,
                             autoHeight:true,*/
                             height:150,
                             listeners:
                                 {
                                    afteredit:function()
                                    {
                                        prerecibo.fn_calcular();
                                    }
                                 },
                             columns:
                             [
                                {
                                  header:"Item", width: 20, sortable: true, dataIndex: 'item'},
								{
                                  header:"Concepto", width: 100, sortable: true, dataIndex: 'concepto'},
                                {
                                  header:"Cuenta", width: 70, sortable: true, dataIndex: 'cuenta'},
								{
                                  header:"Tip Doc", width: 40, sortable: true, dataIndex: 'tip_doc'},
								{
                                  header:"Nro Doc", width: 70, sortable: true, dataIndex: 'nro_doc'},
                                {
                                  header:"D", width: 70, sortable: true, dataIndex: 'debe',align:'right'},
								{
                                  header:"H", width: 70, sortable: true, dataIndex: 'haber',align:'right'},
                               ]
                             ,
                             tbar:
                               [
									{
										xtype:'panel',labelWidth:1,layout:'form',
										border:false,columnWidth:.3,
										items:
										[
											{
												xtype:'combo',
												store:store_concepto_contable_lista,
												id:prerecibo.id+'-cco_id',
												emptyText:'Concepto Contable',
												itemCls: 'label01',
												style:'margin-left:0px',
												width:200,
												mode:'local',
												valueField:'cco_id',
												displayField:'nombre',
												triggerAction:'all',
												forceSelection:true,
												allowBlank:false,
											}
										]
									},
									{
										xtype:'panel',labelWidth:1,layout:'form',
										border:false,columnWidth:.2,
										items:
										[        
											{
												xtype:'numberfield',
												id:prerecibo.id+'-monto',
												emptyText:'Monto',
												itemCls: 'label01',
												style:{marginLeft:'7px',textAlign:'right'},
												width:76,
											}
										]
									},
									{
										xtype:'panel',labelWidth:20,layout:'form',
										border:false,columnWidth:.2,
										items:
										[
											{
												xtype: "radiogroup",
												fieldLabel: "Tipo",
												id: prerecibo.id+'-debe_haber',
												style:'margin-left:7px',
												width:100,
												defaults: {xtype: "radio",name: "debe_haber"},
												columns: [50, 50],
												items: [
													{
														id:prerecibo.id+'-debe_haber_d',
														boxLabel: "Debe",name: "debe_haber",
														inputValue: "D",
														checked:true
													},
													{
														id:prerecibo.id+'-debe_haber_h',
														boxLabel: "Haber",name: "debe_haber",
														inputValue: "H"
													}
												],
											}
										]
									},
									{
										xtype:'panel',labelWidth:1,layout:'form',
										border:false,columnWidth:.2,
										items:
										[        
											{
												xtype:'textfield',
												id:prerecibo.id+'-detalle',
												emptyText:'Detalle de prerecibo',
												itemCls: 'label01',
												style:{marginLeft:'7px',textAlign:'left'},
												width:150,
												hidden:true
											}
										]
									},
									{
                                     xtype:'button',
                                     text:'Añadir',
                                     iconCls:'btn_add_log',
                                     listeners:
                                     {
                                       click:function()
                                       {
									   	prerecibo.fn_agregar_detalle();
                                          
                                        }
                                  }
                                }
                                  ,
                                  {
                                     xtype:'button',
                                     text:'Quitar',
                                     iconCls:'btn_delete_log',
                                     listeners:
                                     {
                                       click:function()
                                       {
                                          var index = grid_caja.getSelectionModel().getSelectedCell();
                                          if (!index)
                                          {
                                              return false;
                                          }
                                          var rec =  prerecibo.store_reader_caja.getAt(index[0]);
                                           prerecibo.store_reader_caja.remove(rec);
                                           
                                           prerecibo.calcular();
                                           
                                           
                                       }
                                     }
                                  }
                                    
                                     ]
                                }); 
								
					var grid_deudas=new Ext.grid.GridPanel({
                             //tabIndex:27,
                             id:prerecibo.id+'-grid_deudas',
                             store: store_deudas_lista,
                             singleSelect:true,
                             columnLines:true,
                             /*monitorResize:true,*/
                             height:150,
							 loadMask:true,
							  sm: new Ext.grid.RowSelectionModel({
								singleSelect:true
							}),
							listeners:{
								cellclick:function(a,b)
                                    {
                                        vFilaSel = b;
										//alert(vFilaSel);
                                    }
							},
                             columns:
                             [
                                {header:"Tipo", width: 25, sortable: true, dataIndex: 'tipo'},
								{header:"Fecha", width: 100, sortable: true, dataIndex: 'fecha'},
								{header:"Tipo Doc.", width: 80, sortable: true, dataIndex: 'tip_doc',align:'center'},
								{header:"Documento", width: 150, sortable: true, dataIndex: 'nro_doc',align:'center'},
								{header:"Saldo", width: 150, sortable: true, dataIndex: 'saldo',align:'right'},								
                               ]
                                });

            var panel_form=new Ext.Panel({
            layout:'form',
            border:false,
            bodyStyle:'margin:5px;',
            items:
            [
            {
				id:prerecibo.id+'-formulario',
				xtype:'form',
				frame: true,
                layout:'column',
                border:false,
                items:
                [
					{
                      xtype:'hidden',
                      id:prerecibo.id+'-mpr_id',
                      value:'0'
                    },
					{
                      xtype:'hidden',
                      id:prerecibo.id+'-per_id',
                      value:'0'
                    },
                    {
                        xtype:'panel',labelWidth:37,layout:'form',
                        border:false,columnWidth:.20,
                        items:
                        [
                            {
                                xtype:'datefield',
                                id:prerecibo.id+'-fecha',
                                emptyText:'Fecha',
                                width:100,
                                fieldLabel:'Fecha',
                                format:'d/m/Y',
                                altFormats : "d/m/Y",
                                value:'<? echo date('d/m/Y');?>',
                                style:'margin-left:7px'
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:50,layout:'form',
                        border:false,columnWidth:.5,
                        items:
                        [
                            {
                                xtype: "radiogroup",
                                fieldLabel: "Girador",
                                id: prerecibo.id+'-tipo_pagador',
                                style:'margin-left:7px',
								width:240,
                                defaults: {xtype: "radio",name: "tipo_pagador"},
                                columns: [80, 80, 80],
                                items: [
                                    {
                                        id:prerecibo.id+'-tipo_pagador_c',
                                        boxLabel: "CLiente",name: "tipo_pagador",
                                        inputValue: "1",
                                        checked:true
                                    },
                                    {
                                        id:prerecibo.id+'-tipo_pagador_p',
                                        boxLabel: "Proveedor",name: "tipo_pagador",
                                        inputValue: "2"
                                    },
                                    {
                                        id:prerecibo.id+'-tipo_pagador_v',
                                        boxLabel: "Varios",name: "tipo_pagador",
                                        inputValue: "9"
                                    }
                                ],
								listeners : {
									change : function(obj){
										Ext.getCmp(prerecibo.id+'-per_id').setValue('');
										Ext.getCmp(prerecibo.id+'-per_nom').setValue('');
										Ext.getCmp(prerecibo.id+'-per_doc').setValue('');
										Ext.getCmp(prerecibo.id+'-comentario').setValue('');
										Ext.getCmp(prerecibo.id+'-grid_caja').store.removeAll(false);
			
										if(obj.getValue().getGroupValue()=='1'){
											Ext.getCmp(prerecibo.id+'-btn_busprv').setVisible(false);
											Ext.getCmp(prerecibo.id+'-btn_buscli').setVisible(true);
											Ext.getCmp(prerecibo.id+'-debe_haber').setVisible(false);
											Ext.getCmp(prerecibo.id+'-per_doc').setReadOnly(true);
											Ext.getCmp(prerecibo.id+'-per_nom').setReadOnly(true);
										}else{
											if(obj.getValue().getGroupValue()=='2'){
												Ext.getCmp(prerecibo.id+'-btn_busprv').setVisible(true);
												Ext.getCmp(prerecibo.id+'-btn_buscli').setVisible(false);
												Ext.getCmp(prerecibo.id+'-debe_haber').setVisible(false);
												Ext.getCmp(prerecibo.id+'-per_doc').setReadOnly(true);
												Ext.getCmp(prerecibo.id+'-per_nom').setReadOnly(true);
											}else{
												Ext.getCmp(prerecibo.id+'-btn_busprv').setVisible(false);
												Ext.getCmp(prerecibo.id+'-btn_buscli').setVisible(false);
												Ext.getCmp(prerecibo.id+'-debe_haber').setVisible(true);
												Ext.getCmp(prerecibo.id+'-per_doc').setReadOnly(false);
												Ext.getCmp(prerecibo.id+'-per_nom').setReadOnly(false);
												Ext.getCmp(prerecibo.id+'-per_nom').focus()
											}
										}
									}
								}
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:70,layout:'form',
                        border:false,columnWidth:.3,
                        items:
                        [
                            {
                                xtype:'textfield',
                                id:prerecibo.id+'-codigo',
                                fieldLabel:'Operación',
                                itemCls: 'label01',
                                style:'margin-left:7px',
                                width:120,
								disabled:true,
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:40,layout:'form',
                        border:false,columnWidth:.45,
                        items:
                        [
                            {
                                xtype:'textfield',
                                id:prerecibo.id+'-per_nom',
                                fieldLabel:'Persona',
                                itemCls: 'label01',
                                style:'margin-left:7px',
                                width:280,
								readOnly:true,
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:80,layout:'form',
                        border:false,columnWidth:.25 ,
                        items:
                        [
                            {
                                xtype:'textfield',
                                id:prerecibo.id+'-per_doc',
                                fieldLabel:'CODIGO/RUC/DNI',
                                itemCls: 'label01',
                                style:'margin-left:7px',
                                width:100,
								readOnly:true,
                            }
                        ]
                    },
					{
                        xtype:'panel',labelWidth:10,layout:'form',
                        border:false,columnWidth:.1,
                        items:
                        [
                            btn_buscli
                        ]
                    },
					{
                        xtype:'panel',labelWidth:10,layout:'form',
                        border:false,columnWidth:.1,
                        items:
                        [
                            btn_busprv
                        ]
                    },
					{
                        xtype:'panel',layout:'form',
                        border:true,columnWidth:1,height:150,/*autoScroll:true,*/
                        bodyStyle:'margin-bottom:7px',
                        items:
                        [        
                            grid_deudas
                        ]
                    },
                    {
                        xtype:'panel',layout:'form',
                        border:true,columnWidth:1,height:150,/*autoScroll:true,*/
                        bodyStyle:'margin-bottom:7px',
                        items:
                        [        
                            grid_caja
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:80,layout:'form',
                        border:false,columnWidth:.7,
                        items:
                        [        
                            {
                                xtype:'textarea',
                                id:prerecibo.id+'-comentario',
                                fieldLabel:'Comentario',
                                itemCls: 'label01',
                                style:{marginLeft:'7px',textAlign:'left'},
                                width:300,
								height:40,
								allowBlank:false,
                            }
                        ]
                    },
                    {
                        xtype:'panel',labelWidth:80,layout:'form',
                        border:false,columnWidth:0.3,
                        items:
                        [        
                            {
                                xtype:'numberfield',
                                id:prerecibo.id+'-total',
                                fieldLabel:'Total',
                                itemCls: 'label01',
                                style:{marginLeft:'7px',textAlign:'left'},
                                width:300,
								height:40,
								allowBlank:false,
                            }
                        ]
                    }
                ]
            }

            ]
            });
            
            var panel = new Ext.Panel({  
            layout: 'border',
            tbar:[
                    {
                        xtype: 'toolbar',
                        dock: 'top',
                        items: [
                            btn_nuevo,'-',btn_guardar,btn_actualizar,btn_editar,'-',btn_anular,btn_eliminar,'-',btn_imprimir,btn_cancelar,
                            {
								xtype:'datefield',
								id:prerecibo.id+'-fecha_prerecibo',
								width:100,
								format:'d/m/Y',
								altFormats : "d/m/Y",
								value:'<? echo date('d/m/Y');?>',
								style:'margin-left:7px',
								listeners:{
									select:function(obj){
										store_prerecibo_lista.load({params:{fecha:obj.getValue(), tipo_pagador:Ext.getCmp(prerecibo.id+'-tipo_pagador_prerecibo').getValue().getGroupValue(),start:0,limit:100}});
									}	
								}
							},{
                                xtype: "radiogroup",
                                fieldLabel: "Girador",
                                id: prerecibo.id+'-tipo_pagador_prerecibo',
                                style:'margin-left:7px',
								width:210,
                                defaults: {xtype: "radio",name: "tipo_pagador_prerecibo"},
                                columns: [70, 70, 70],
                                items: [
                                    {
                                        id:prerecibo.id+'-tipo_pagador_prerecibo_c',
                                        boxLabel: "Cliente",name: "tipo_pagador_prerecibo",
                                        inputValue: "1",
                                        checked:true
                                    },
                                    {
                                        id:prerecibo.id+'-tipo_pagador_prerecibo_p',
                                        boxLabel: "Proveedor",name: "tipo_pagador_prerecibo",
                                        inputValue: "2"
                                    },
                                    {
                                        id:prerecibo.id+'-tipo_pagador_prerecibo_v',
                                        boxLabel: "Varios",name: "tipo_pagador_prerecibo",
                                        inputValue: "9"
                                    }
                                ],
								listeners:{
									change:function(obj)
									{
										store_prerecibo_lista.load({params:{fecha:Ext.getCmp(prerecibo.id+'-fecha_prerecibo').getValue(),tipo_pagador:obj.getValue().getGroupValue(),start:0,limit:100}});										
									}
										
								}
                            } 
                    
                        ]
                    }],
            bodyStyle:'height:auto;width:70%;margin:auto;',
            border:false,
            items: [
            {  
                region: 'west',
                layout:'fit',
                xtype: 'panel',
                width:'96%',
                autoScroll: true,  
                border:false,
                items:
                [
                    grid_prerecibo_lista,                   
                ]
            }
            ,
            {
            region:'center',
            width:'0',
            height:'0'
            }
            ,
            {  
                id:prerecibo.id+'-panel_derecho',
                region: 'east',
                xtype: 'panel',
                collapsible:true,
                layout: 'form',
                split:true,
                collapsed:true,
                width:'100%',
                border:false,
                items:
                [
                    panel_form
                ]  
            }
      ]  
    });
            
            new Ext.Window({
                                        id:'win_prerecibo',
                                        title:'Pre-Recibo por Dia', 
                                        width: 800,
                                        height:600,
                                        layout:'fit',
                                        border:false,
                                        frame:true,
                                        autoDestroy:true,
                                        autoScroll:false,
                                        minimizable: false,
                                        maximizable: false,
                                        closable:true,
                                        collapsible:false,
                                        draggable:true,
                        onEsc:function(){Ext.getCmp('win_prerecibo').close();}, resizable:true,
                        items:panel,
                        buttonAlign:'center'
            });
            Ext.getCmp('win_prerecibo').show();
            Ext.getCmp('win_prerecibo').center();
            Ext.getCmp('win_prerecibo').toFront();
            prerecibo.fn_habilitar(false,0);
			store_prerecibo_lista.load({params:{fecha:Ext.getCmp(prerecibo.id+'-fecha_prerecibo').getValue(),tipo_pagador:Ext.getCmp(prerecibo.id+'-tipo_pagador_prerecibo').getValue().getGroupValue(),start:0,limit:100}});
            Ext.getCmp(prerecibo.id+'-panel_derecho').collapse();
			Ext.getCmp(prerecibo.id+'-panel_derecho').setVisible(false);
            
			obj = Ext.getCmp(prerecibo.id+'_pager').getEl();
			obj = obj.parent();
			obj = obj.prev();
			obj.setStyle('height','375px');
            
                
            
        },
        fn_nuevo:function()
        {
			Ext.Msg.wait('Generando código de Pre-Recibo... por favor espere!');
            Ext.Ajax.request({
				url:'movimientos/prerecibo-codigo',
				params:
				{
					table:'movimientos_prerecibo'
				},
				success:function(response,options)
				{   
				//alert(response.responseText);
					Ext.Msg.hide();
					var res = Ext.decode(response.responseText);						
					var numero="000000000"+res.codigo;
					//alert(numero);
					var agencia= "000"+vgIdTienda;
					//alert(agencia);
					var codigo="PR"+agencia.substr(agencia.length-3,3)+numero.substr(numero.length-9,9)
					Ext.getCmp(prerecibo.id+'-codigo').setValue(codigo);
				}
			});  
			Ext.getCmp(prerecibo.id+'-tipo_pagador').setValue('1');
			Ext.getCmp(prerecibo.id+'-btn_busprv').setVisible(false);
			Ext.getCmp(prerecibo.id+'-btn_buscli').setVisible(true);
			Ext.getCmp(prerecibo.id+'-debe_haber').setVisible(false);
			
			Ext.getCmp(prerecibo.id+'-mpr_id').setValue('');
			Ext.getCmp(prerecibo.id+'-per_id').setValue('');
						
			Ext.getCmp(prerecibo.id+'-per_nom').setValue('');
			Ext.getCmp(prerecibo.id+'-per_doc').setValue('');
			Ext.getCmp(prerecibo.id+'-cco_id').setValue('');
			Ext.getCmp(prerecibo.id+'-monto').setValue('');
			

			Ext.getCmp(prerecibo.id+'-comentario').setValue('');
			
			prerecibo.fn_habilitar(true,1);
			Ext.getCmp(prerecibo.id+'-grid_deudas').store.removeAll(false);
			Ext.getCmp(prerecibo.id+'-grid_caja').store.removeAll(false);
        },
        fn_editar:function()
        {
            var rs=Ext.getCmp(prerecibo.id+'-grid_lista').getSelectionModel().getSelected();
            if(rs)
            {				
				Ext.getCmp(prerecibo.id+'-panel_derecho').expand();
				Ext.getCmp(prerecibo.id+'-panel_derecho').setVisible(true);
				Ext.getCmp(prerecibo.id+'-msganulado').setVisible(false);
                prerecibo.fn_habilitar(true,2);
				if(rs.get('anulado')=='1'){
					Ext.getCmp(prerecibo.id+'-btn_actualizar').setVisible(false);
					Ext.getCmp(prerecibo.id+'-msganulado').setVisible(true);
				}
				
				Ext.getCmp(prerecibo.id+'-mpr_id').setValue(rs.get('mpr_id'));
				Ext.getCmp(prerecibo.id+'-codigo').setValue(rs.get('codigo'));
				Ext.getCmp(prerecibo.id+'-tipo_ingreso').setValue(rs.get('tipo_ingreso'));
				Ext.getCmp(prerecibo.id+'-fecha').setValue(rs.get('fec_ven'));
				Ext.getCmp(prerecibo.id+'-prv_id').setValue(rs.get('prv_id'));
				Ext.getCmp(prerecibo.id+'-prv_ruc').setValue(rs.get('ruc'));
				Ext.getCmp(prerecibo.id+'-prv_codigo').setValue(rs.get('prv_codigo'));
				Ext.getCmp(prerecibo.id+'-doc_id').setValue(rs.get('doc_id'));
				Ext.getCmp(prerecibo.id+'-numero').setValue(rs.get('doc_n'));
				
				//alert(rs.get('tmv_id'));
				Ext.getCmp(prerecibo.id+'-tmv_id').setValue(rs.get('tmv_id'));
				Ext.getCmp(prerecibo.id+'-guia_remision').setValue(rs.get('n_guia'));
				Ext.getCmp(prerecibo.id+'-cpa_id').setValue(rs.get('cpa_id'));
				Ext.getCmp(prerecibo.id+'-mon_id').setValue(rs.get('mon_id'));
				Ext.getCmp(prerecibo.id+'-observacion').setValue(rs.get('observacion'));
				
				if(rs.get('afecta')=='S'){
					Ext.getCmp(prerecibo.id+'-afecta_almacen').setValue(true);
				}else{
					Ext.getCmp(prerecibo.id+'-afecta_almacen').setValue(false);
				}
				if(rs.get('formato')=='S'){
					Ext.getCmp(prerecibo.id+'-inc_igv').setValue(true);
				}else{
					Ext.getCmp(prerecibo.id+'-inc_igv').setValue(false);	
				}
				Ext.Msg.wait('Cargando detalle de compra... por favor espere!');
				Ext.Ajax.request({
					url:'movimientos/prerecibo-detalle',
					params:
					{
						mpr_id:rs.get('mpr_id')
					},
					success:function(response,options)
					{     
						Ext.Msg.hide();        
						//alert(response.responseText);
						var res = Ext.decode(response.responseText);
						Ext.getCmp(prerecibo.id+'-grid_caja').store.removeAll(false);						
						for (i=0;i<res.data.length;i++){
							//alert(res.data[i]);
							detalle = res.data[i];
							var u = new prerecibo.store_reader_caja.recordType({
								id:detalle['pro_id'],cantidad:detalle['cantidad'],codigo:detalle['codigo1'],detalle:detalle['producto'],precio:detalle['precio_compra'],descuento:detalle['descuento'],total:detalle['total'],ume_id:detalle['ume_id'], marca:detalle['marca']
							});
							//alert(detalle['pro_id']);
							Ext.getCmp(prerecibo.id+'-grid_caja').stopEditing();
							prerecibo.store_reader_caja.insert(prerecibo.store_reader_caja.getCount(), u);
							Ext.getCmp(prerecibo.id+'-grid_caja').startEditing(prerecibo.store_reader_caja.getCount()-1,1);
						}		
						//alert("salir");			
						prerecibo.calcular();			
					}
				});
            }
            else
            {
                og.msg("Error","Seleccione un registro");
            }
        },
        fn_actualizar:function()
        {
			if(prerecibo.fn_validar()){
				if(Ext.getCmp(prerecibo.id+'-afecta_almacen').getValue()){
					vAfecta = 'S';	
				}else{
					vAfecta = 'N';	
				}
				if(Ext.getCmp(prerecibo.id+'-inc_igv').getValue()){
					vFormato = 'S';	
				}else{
					vFormato = 'N';	
				}
				var vData= new Array();
				var v_detalle= new Array();
				for(i=0;i<Ext.getCmp(prerecibo.id+'-grid_caja').store.getCount();i++)
				{
					datos=Ext.getCmp(prerecibo.id+'-grid_caja').getStore(0).getAt(i);
					vValore = datos.get('id') + '.@.' + datos.get('cantidad') + '.@.' + datos.get('codigo') + '.@.' + datos.get('detalle') + '.@.' + datos.get('precio') + '.@.' + datos.get('descuento') + '.@.' + datos.get('total') + '.@.' + datos.get('ume_id') + '.@.' + vAfecta + '.@.' + datos.get('valor_bruto') + '.@.' + datos.get('valor_desc');
					vData[i] = vValore;
				}

				Ext.getCmp(prerecibo.id+'-formulario').getForm().submit({						
					method: 'POST',
					url:'movimientos/prerecibo-actualizar',
					params:{ 
						mpr_id:Ext.getCmp(prerecibo.id+'-mpr_id').getValue(),
						codigo:Ext.getCmp(prerecibo.id+'-codigo').getValue(),
						prv_id:Ext.getCmp(prerecibo.id+'-prv_id').getValue(),
						tipo_ingreso:Ext.getCmp(prerecibo.id+'-tipo_ingreso').getValue().getGroupValue(),
						doc_id:Ext.getCmp(prerecibo.id+'-doc_id').getValue(),
						doc_n:Ext.getCmp(prerecibo.id+'-numero').getValue(),
						tmv_id:Ext.getCmp(prerecibo.id+'-tmv_id').getValue(),
						n_guia:Ext.getCmp(prerecibo.id+'-guia_remision').getValue(),
						cpa_id:Ext.getCmp(prerecibo.id+'-cpa_id').getValue(),
						mon_id:Ext.getCmp(prerecibo.id+'-mon_id').getValue(),
						valor_compra:Ext.getCmp(prerecibo.id+'-valor_compra').getValue(),
						valor_bruto:Ext.getCmp(prerecibo.id+'-valor_bruto').getValue(),
						valor_desc:Ext.getCmp(prerecibo.id+'-valor_descuento').getValue(),
						impuesto_igv:Ext.getCmp(prerecibo.id+'-impuesto_igv').getValue(),
						total_compra:Ext.getCmp(prerecibo.id+'-total_compra').getValue(),
						fecha:Ext.getCmp(prerecibo.id+'-fecha').getValue(),
						tip_doc:Ext.getCmp(prerecibo.id+'-doc_id').getRawValue(),
						observacion:Ext.getCmp(prerecibo.id+'-observacion').getValue(),
						afecta_stock:vAfecta,
						formato:vFormato,
						igv:18,
						"v_detalle[]":vData,
					},
					waitTitle: 'Actualizando Informacion',
					waitMsg: 'Enviando datos..',
					success: function(form, action){					
						var res = Ext.decode(action.response.responseText);
						if(res.success){
							Ext.getCmp(prerecibo.id+'-panel_derecho').collapse();
							Ext.getCmp(prerecibo.id+'-panel_derecho').setVisible(false);
							og.msg("Ok","El registro se ha guardado");
							prerecibo.fn_habilitar(false,0);
							Ext.getCmp(prerecibo.id+'-grid_lista').store.load();
						}else{
							og.msg("Error",res.mensaje);
							Ext.getCmp(prerecibo.id+res.campo).focus(true,10);							
						}
						Ext.getCmp(prerecibo.id+'-formulario').getForm().reset();
					},
					failure: function(form, action){
						var res = Ext.decode(action.response.responseText);
						Ext.Msg.show({
							title:'Error',
							msg: res.mensaje,
							   buttons: Ext.Msg.OK,
							   icon: Ext.MessageBox.ERROR
						});
						Ext.getCmp(prerecibo.id+res.campo).focus(true,10);							
					}
				});				
				/*Ext.Ajax.request({
					url:'movimientos/prerecibo-guardar',
					params:
					{
						mve_id:Ext.getCmp(ventas.id+'-mve_id').getValue(),
						codigo:Ext.getCmp(prerecibo.id+'-codigo').getValue(),
						prv_id:Ext.getCmp(prerecibo.id+'-prv_id').getValue(),
						tipo_ingreso:Ext.getCmp(prerecibo.id+'-tipo_ingreso').getValue().getGroupValue(),
						doc_id:Ext.getCmp(prerecibo.id+'-doc_id').getValue(),
						doc_n:Ext.getCmp(prerecibo.id+'-numero').getValue(),
						n_guia:Ext.getCmp(prerecibo.id+'-guia_remision').getValue(),
						cpa_id:Ext.getCmp(prerecibo.id+'-cpa_id').getValue(),
						mon_id:Ext.getCmp(prerecibo.id+'-mon_id').getValue(),
						valor_compra:Ext.getCmp(prerecibo.id+'-valor_compra').getValue(),
						impuesto_igv:Ext.getCmp(prerecibo.id+'-impuesto_igv').getValue(),
						total_compra:Ext.getCmp(prerecibo.id+'-total_compra').getValue(),
						fecha:Ext.getCmp(prerecibo.id+'-fecha').getValue(),
						tip_doc:Ext.getCmp(prerecibo.id+'-doc_id').getRawValue(),
						afecta_stock:vAfecta,
						"v_detalle[]":vData,
					},
					success:function(response,options)
					{
						var res = Ext.decode(response.responseText);
						if(res.success){
							Ext.getCmp(prerecibo.id+'-panel_derecho').collapse();
							Ext.getCmp(prerecibo.id+'-panel_derecho').setVisible(false);
							og.msg("Ok","El registro se ha guardado");
							prerecibo.fn_habilitar(false,0);
							Ext.getCmp(prerecibo.id+'-grid_lista').store.load();
						}else{
							og.msg("Error",res.mensaje);
							Ext.getCmp(prerecibo.id+res.campo).focus(true,10);							
						}
					}
				});*/
			}
        },
        fn_guardar:function()
        {	
			if(prerecibo.fn_validar()){
				
				var vData= new Array();
				for(i=0;i<Ext.getCmp(prerecibo.id+'-grid_caja').store.getCount();i++)
				{
					datos=Ext.getCmp(prerecibo.id+'-grid_caja').getStore(0).getAt(i);		
					alert(datos.get('debe') + '.@.' + datos.get('haber'));			
					vValore = i + '.@.' + datos.get('cuenta') + '.@.' + datos.get('tip_doc') + '.@.' + datos.get('nro_doc') + '.@.' + datos.get('tipo') + '.@.' + datos.get('doc_id') + '.@.' + datos.get('deb_hab') + '.@.' + datos.get('debe') + '.@.' + datos.get('haber') + '.@.' + datos.get('cco_id');
					vData[i] = vValore;
				}
				//alert("Antes");
				Ext.getCmp(prerecibo.id+'-formulario').getForm().submit({						
					method: 'POST',
					url:'movimientos/prerecibo-guardar',
					params:{ 
						tipo_pagador:Ext.getCmp(prerecibo.id+'-tipo_pagador').getValue().getGroupValue(),
						fecha:Ext.getCmp(prerecibo.id+'-fecha').getValue(),
						per_id:Ext.getCmp(prerecibo.id+'-per_id').getValue(),
						per_doc:Ext.getCmp(prerecibo.id+'-per_doc').getValue(),
						per_nom:Ext.getCmp(prerecibo.id+'-per_nom').getValue(),
						comentario:Ext.getCmp(prerecibo.id+'-comentario').getValue(),
						"v_detalle[]":vData,
					},
					waitTitle: 'Guardando Informacion',
					waitMsg: 'Enviando datos..',
					success: function(form, action){
						//alert("entra");	
						alert(action.response.responseText);				
						var res = Ext.decode(action.response.responseText);
						if(res.success){
							Ext.getCmp(prerecibo.id+'-panel_derecho').collapse();
							Ext.getCmp(prerecibo.id+'-panel_derecho').setVisible(false);
							og.msg("Ok","El registro se ha guardado");
							prerecibo.fn_habilitar(false,0);
							Ext.getCmp(prerecibo.id+'-grid_lista').store.load();
						}else{
							og.msg("Error",res.mensaje);
							Ext.getCmp(prerecibo.id+res.campo).focus(true,10);							
						}
						Ext.getCmp(prerecibo.id+'-formulario').getForm().reset();
					},
					failure: function(form, action){
						alert(action.response.responseText);
						var res = Ext.decode(action.response.responseText);
						Ext.Msg.show({
							title:'Error',
							msg: res.mensaje,
							   buttons: Ext.Msg.OK,
							   icon: Ext.MessageBox.ERROR
						});
						Ext.getCmp(prerecibo.id+res.campo).focus(true,10);							
					}
				});			
			}
        },
		fn_anular:function()
        {
            var rs=Ext.getCmp(prerecibo.id+'-grid_lista').getSelectionModel().getSelected();
            if(rs)
            {
				if(rs.get('anulado')=='1'){
					og.msg("Error","Documento ya esta anulado");
					return;
				}
				Ext.Msg.confirm('Alerta', 'Desea Anular?<br>Documento :<br>' + rs.get('doc_n'), function(btn) {
					if(btn == 'yes')
					{
						Ext.Msg.wait('Anulando compra... por favor espere!');
						Ext.Ajax.request({
							url:'movimientos/prerecibo-anular',
							params:
							{
								mpr_id:rs.get('mpr_id')
							},
							success:function(response,options)
							{           
								Ext.Msg.hide();  
								var res = Ext.decode(response.responseText);
								if(res.success){
									og.msg("Ok","El registro se ha anulado");
									prerecibo.fn_habilitar(false,0);
									Ext.getCmp(prerecibo.id+'-grid_lista').store.load({params:{fecha:Ext.getCmp(prerecibo.id+'-fecha_prerecibo').getValue(),start:0,limit:100}});
								}else{
									og.msg("Error",res.mensaje);
									Ext.getCmp(prerecibo.id+res.campo).focus(true,10);				
								}
							}
						});
					}
				 });
            }
            else
            {
                og.msg("Error","Seleccione un registro");
            }
        },
        fn_eliminar:function()
        {
            var rs=Ext.getCmp(prerecibo.id+'-grid_lista').getSelectionModel().getSelected();
            if(rs)
            {
				Ext.Msg.confirm('Alerta', 'Desea eliminar?<br>Documento :<br>' + rs.get('doc_n'), function(btn) {
					if(btn == 'yes')
					{
						Ext.Msg.wait('Eliminando compra... por favor espere!');
						Ext.Ajax.request({
							url:'movimientos/prerecibo-eliminar',
							params:
							{
								mpr_id:rs.get('mpr_id')
							},
							success:function(response,options)
							{             			
								Ext.Msg.hide();
								var res = Ext.decode(response.responseText);
								if(res.success){
									og.msg("Ok","El registro se ha eliminado");
									prerecibo.fn_habilitar(false,0);
									Ext.getCmp(prerecibo.id+'-grid_lista').store.load({params:{fecha:Ext.getCmp(prerecibo.id+'-fecha_prerecibo').getValue(),start:0,limit:100}});
								}else{
									og.msg("Error",res.mensaje);
									Ext.getCmp(prerecibo.id+res.campo).focus(true,10);				
								}
							}
						});
					}
				 });
            }
            else
            {
                og.msg("Error","Seleccione un registro");
            }
        },		
        fn_calcular:function()
        {
            var total='0';
            var datos='';
			var debe = '0';
			var haber = '0';
            for(i=0;i<Ext.getCmp(prerecibo.id+'-grid_caja').store.getCount();i++)
            {
                datos=Ext.getCmp(prerecibo.id+'-grid_caja').getStore(0).getAt(i);
				
                debe=Number(debe)+Number(datos.get('debe'));
				haber=Number(haber)+Number(datos.get('haber'));
				datos.set('item',i+1);
				
            }
			debe= Math.round(debe*100)/100;
			haber= Math.round(haber*100)/100;
			if(debe>haber){
				Ext.getCmp(prerecibo.id+'-total').setValue(debe - haber);
			}else{
				Ext.getCmp(prerecibo.id+'-total').setValue(haber - debe);	
			}
			
        },
		fn_validar:function(){
			
			if(Ext.getCmp(prerecibo.id+'-grid_caja').store.getCount()==0){
				og.msg("Error", "Por favor ingrese detalle de la prerecibo");
                Ext.getCmp(prerecibo.id+'-mon_id').focus(true,10);
                return false;
			}
			return true;
		},
		fn_habilitar:function(sw, tipo)
        {
			if(!sw){
				Ext.getCmp(prerecibo.id+'-btn_guardar').setVisible(sw);
				Ext.getCmp(prerecibo.id+'-btn_actualizar').setVisible(sw);
			}else{
				if(tipo==1){
					Ext.getCmp(prerecibo.id+'-btn_guardar').setVisible(sw);
					Ext.getCmp(prerecibo.id+'-btn_actualizar').setVisible(!sw);
				}else{
					Ext.getCmp(prerecibo.id+'-btn_guardar').setVisible(!sw);
					Ext.getCmp(prerecibo.id+'-btn_actualizar').setVisible(sw);
				}
			}
			Ext.getCmp(prerecibo.id+'-btn_nuevo').setVisible(!sw);			
			Ext.getCmp(prerecibo.id+'-btn_cancelar').setVisible(sw);
			
			Ext.getCmp(prerecibo.id+'-btn_editar').setVisible(!sw);
			Ext.getCmp(prerecibo.id+'-btn_eliminar').setVisible(!sw);
			Ext.getCmp(prerecibo.id+'-btn_anular').setVisible(!sw);

			Ext.getCmp(prerecibo.id+'-btn_editar').disable();
			Ext.getCmp(prerecibo.id+'-btn_eliminar').disable();
			Ext.getCmp(prerecibo.id+'-btn_anular').disable();
			
			Ext.getCmp(prerecibo.id+'-fecha_prerecibo').setVisible(!sw);			
			//Ext.getCmp(prerecibo.id+'-combo_describe').setVisible(!sw);
			
			Ext.getCmp(prerecibo.id+'-btn_imprimir').setVisible(!sw);			
        },
		
		fn_ubicaproveedor:function(vcampo, vvalor, vnombre, vruc){
			Ext.getCmp(prerecibo.id+'-per_id').setValue(vvalor);
			Ext.getCmp(prerecibo.id+'-per_nom').setValue(vnombre);
			Ext.getCmp(prerecibo.id+'-per_doc').setValue(vruc);		
			//alert(vvalor);
			Ext.getCmp(prerecibo.id+'-grid_deudas').store.load({params:{cli_id:vvalor,tipo:Ext.getCmp(prerecibo.id+'-tipo_pagador').getValue().getGroupValue()}});		
		},
		
		fn_ubicacliente:function(vcampo, vvalor, vnombre, vruc){
			Ext.getCmp(prerecibo.id+'-per_id').setValue(vvalor);
			Ext.getCmp(prerecibo.id+'-per_nom').setValue(vnombre);
			Ext.getCmp(prerecibo.id+'-per_doc').setValue(vruc);	
			
			Ext.getCmp(prerecibo.id+'-grid_deudas').store.load({params:{cli_id:vvalor,tipo:Ext.getCmp(prerecibo.id+'-tipo_pagador').getValue().getGroupValue()}});	
		},
		
		fn_ubicapersonal:function(vcampo, vvalor, vcodigo, vnombre, vruc){
			Ext.getCmp(prerecibo.id+'-per_id').setValue(vvalor);
			Ext.getCmp(prerecibo.id+'-per_nom').setValue(vnombre);
			Ext.getCmp(prerecibo.id+'-per_doc').setValue(vruc);			
		},
		
		fn_imprimir:function()
        {
			document.getElementById('frmReporte-prerecibo').action="movimientos/prerecibo-lista-impresion";
			document.getElementById('txtpar1').value = Ext.getCmp(prerecibo.id+'-fecha_prerecibo').getValue();
			var activePage = Math.ceil((Ext.getCmp(prerecibo.id+'_pager').cursor + Ext.getCmp(prerecibo.id+'_pager').pageSize) / Ext.getCmp(prerecibo.id+'_pager').pageSize);
			document.getElementById('txtpar3').value = activePage;
            document.getElementById('frmReporte-prerecibo').submit();
        },
		
		fn_imprimir:function()
        {
			document.getElementById('frmReporte-prerecibo').action="movimientos/prerecibo-lista-impresion";
			document.getElementById('txtpar1').value = Ext.getCmp(prerecibo.id+'-fecha_prerecibo').getValue();
			var activePage = Math.ceil((Ext.getCmp(prerecibo.id+'_pager').cursor + Ext.getCmp(prerecibo.id+'_pager').pageSize) / Ext.getCmp(prerecibo.id+'_pager').pageSize);
			document.getElementById('txtpar3').value = activePage;
            document.getElementById('frmReporte-prerecibo').submit();
        },
		
		fn_agregar_detalle:function()
        {
			//alert("uno");
			if(Ext.getCmp(prerecibo.id+'-tipo_pagador').getValue().getGroupValue()=='9'){
				Ext.Msg.wait('Obteniendo Cuenta Contable... por favor espere!');
				Ext.Ajax.request({
					url:'movimientos/prerecibo-cuenta',
					params:
					{
						cco_id:Ext.getCmp(prerecibo.id+'-cco_id').getValue()
					},
					success:function(response,options)
					{   
					//alert(response.responseText);
						Ext.Msg.hide();
						var res = Ext.decode(response.responseText);	
						
								
						
						if(Ext.getCmp(prerecibo.id+'-debe_haber').getValue().getGroupValue()=='H'){
							vDebHab = 'H';
							vHaber = Ext.getCmp(prerecibo.id+'-monto').getValue();
							vDebe = '0';
						}else{
							vDebHab = 'D';
							vHaber = '0';
							vDebe = Ext.getCmp(prerecibo.id+'-monto').getValue();						
						}
						var u = new prerecibo.store_reader_caja.recordType({
							item:0,concepto:Ext.getCmp(prerecibo.id+'-cco_id').getRawValue(),cuenta:res.cuenta,tip_doc:'',nro_doc:'',debe:vDebe,haber:vHaber,tipo:'',doc_id:'0',cco_id:Ext.getCmp(prerecibo.id+'-cco_id').getValue(), deb_hab:vDebHab
						});
						//alert("antes");
						Ext.getCmp(prerecibo.id+'-grid_caja').stopEditing();
						prerecibo.store_reader_caja.insert(prerecibo.store_reader_caja.getCount(), u);
						
					}
				});
			}else{
				if (vFilaSel<0)
				{
					og.msg("Error", "Por favor seleccione una deuda");
					return false;
				}
				//alert(vFilaSel);
				
				rec=Ext.getCmp(prerecibo.id+'-grid_deudas').getStore(0).getAt(vFilaSel);
				
				if(Number(Ext.getCmp(prerecibo.id+'-monto').getValue()) > Number(rec.get('saldo'))){
					og.msg("Error", "Monto debe ser menor al Saldo");
					return false;
				}
			
				Ext.Msg.wait('Obteniendo Cuenta Contable... por favor espere!');
				Ext.Ajax.request({
					url:'movimientos/prerecibo-cuenta',
					params:
					{
						cco_id:Ext.getCmp(prerecibo.id+'-cco_id').getValue()
					},
					success:function(response,options)
					{   
					//alert(response.responseText);
						Ext.Msg.hide();
						var res = Ext.decode(response.responseText);					
						
						if(Ext.getCmp(prerecibo.id+'-tipo_pagador').getValue().getGroupValue()=='1'){
							vDebHab = 'H';
							vHaber = Ext.getCmp(prerecibo.id+'-monto').getValue();
							vDebe = '0';
						}else{
							vDebHab = 'D';
							vHaber = '0';
							vDebe = Ext.getCmp(prerecibo.id+'-monto').getValue();						
						}
						var u = new prerecibo.store_reader_caja.recordType({
							item:0,concepto:Ext.getCmp(prerecibo.id+'-cco_id').getRawValue(),cuenta:res.cuenta,tip_doc:rec.get('tip_doc'),nro_doc:rec.get('nro_doc'),debe:vDebe,haber:vHaber,tipo:rec.get('tipo'),doc_id:rec.get('doc_id'),cco_id:Ext.getCmp(prerecibo.id+'-cco_id').getValue(), deb_hab:vDebHab
						});
						//alert("antes");
						Ext.getCmp(prerecibo.id+'-grid_caja').stopEditing();
						prerecibo.store_reader_caja.insert(prerecibo.store_reader_caja.getCount(), u);
						prerecibo.fn_calcular();
					}
				}); 
			}
			//alert(Ext.getCmp(prerecibo.id+'-monto').getValue());
			
			//Ext.getCmp(prerecibo.id+'-grid_caja').startEditing(prerecibo.store_reader_caja.getCount()-1,1);
			//alert("despues");
			//prerecibo.calcular();
        },	
		fn_ubicadeuda:function(vtipo, vfecha, vtip_doc, vnro_doc, vsaldo, vdoc_id){	
			//alert("entra");			
			var u = new prerecibo.store_reader_deudas.recordType({
				tipo:vtipo,fecha:vfecha,tip_doc:vtip_doc,nro_doc:vnro_doc,saldo:vsaldo,doc_id:vdoc_id,
			});
			Ext.getCmp(prerecibo.id+'-grid_deudas').stopEditing();
			prerecibo.store_reader_deudas.insert(prerecibo.store_reader_deudas.getCount(), u);
			//Ext.getCmp(prerecibo.id+'-grid_deudas').startEditing(prerecibo.store_reader_deudas.getCount()-1,1);
			
		},
         
    }
    Ext.onReady(prerecibo.init,prerecibo);

</script>